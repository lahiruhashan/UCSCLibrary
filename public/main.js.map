{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/add-admin/add-admin.component.css","webpack:///./src/app/components/add-admin/add-admin.component.html","webpack:///./src/app/components/add-admin/add-admin.component.ts","webpack:///./src/app/components/add-book/add-book.component.css","webpack:///./src/app/components/add-book/add-book.component.html","webpack:///./src/app/components/add-book/add-book.component.ts","webpack:///./src/app/components/add-book/dialog-overview-dialog-delete-book.html","webpack:///./src/app/components/add-book/dialog-overview-dialog-update-book.html","webpack:///./src/app/components/admin-home/admin-home.component.css","webpack:///./src/app/components/admin-home/admin-home.component.html","webpack:///./src/app/components/admin-home/admin-home.component.ts","webpack:///./src/app/components/admin-home/dialog-overview-dialog-return-book.html","webpack:///./src/app/components/book-details/book-details.component.css","webpack:///./src/app/components/book-details/book-details.component.html","webpack:///./src/app/components/book-details/book-details.component.ts","webpack:///./src/app/components/book-details/dialog-overview-dialog.html","webpack:///./src/app/components/dashboard/dashboard.component.css","webpack:///./src/app/components/dashboard/dashboard.component.html","webpack:///./src/app/components/dashboard/dashboard.component.ts","webpack:///./src/app/components/home/home.component.css","webpack:///./src/app/components/home/home.component.html","webpack:///./src/app/components/home/home.component.ts","webpack:///./src/app/components/home/search-bar/search-bar.component.css","webpack:///./src/app/components/home/search-bar/search-bar.component.html","webpack:///./src/app/components/home/search-bar/search-bar.component.ts","webpack:///./src/app/components/home/search-result/search-result.component.css","webpack:///./src/app/components/home/search-result/search-result.component.html","webpack:///./src/app/components/home/search-result/search-result.component.ts","webpack:///./src/app/components/login/login.component.css","webpack:///./src/app/components/login/login.component.html","webpack:///./src/app/components/login/login.component.ts","webpack:///./src/app/components/navbar/navbar.component.css","webpack:///./src/app/components/navbar/navbar.component.html","webpack:///./src/app/components/navbar/navbar.component.ts","webpack:///./src/app/components/profile/edit/edit.component.css","webpack:///./src/app/components/profile/edit/edit.component.html","webpack:///./src/app/components/profile/edit/edit.component.ts","webpack:///./src/app/components/profile/profile.component.css","webpack:///./src/app/components/profile/profile.component.html","webpack:///./src/app/components/profile/profile.component.ts","webpack:///./src/app/components/register/register.component.css","webpack:///./src/app/components/register/register.component.html","webpack:///./src/app/components/register/register.component.ts","webpack:///./src/app/components/report/report.component.css","webpack:///./src/app/components/report/report.component.html","webpack:///./src/app/components/report/report.component.ts","webpack:///./src/app/components/request-book/request-book.component.css","webpack:///./src/app/components/request-book/request-book.component.html","webpack:///./src/app/components/request-book/request-book.component.ts","webpack:///./src/app/components/requested-books/dialog-overview-dialog-requested-book.html","webpack:///./src/app/components/requested-books/requested-books.component.css","webpack:///./src/app/components/requested-books/requested-books.component.html","webpack:///./src/app/components/requested-books/requested-books.component.ts","webpack:///./src/app/components/update-book/update-book.component.css","webpack:///./src/app/components/update-book/update-book.component.html","webpack:///./src/app/components/update-book/update-book.component.ts","webpack:///./src/app/guards/admin.guard.ts","webpack:///./src/app/guards/auth.guard.ts","webpack:///./src/app/guards/default.guard.ts","webpack:///./src/app/guards/profile.guard.ts","webpack:///./src/app/services/admin.service.ts","webpack:///./src/app/services/auth.service.ts","webpack:///./src/app/services/book-data.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HomeComponent} from \"./components/home/home.component\";\nimport { LoginComponent } from \"./components/login/login.component\";\nimport { ProfileComponent } from \"./components/profile/profile.component\";\nimport { RegisterComponent } from \"./components/register/register.component\";\nimport { DashboardComponent } from \"./components/dashboard/dashboard.component\";\nimport {BookDetailsComponent} from \"./components/book-details/book-details.component\";\nimport {AuthGuard} from \"./guards/auth.guard\";\nimport {RequestBookComponent} from \"./components/request-book/request-book.component\";\nimport {AddBookComponent} from \"./components/add-book/add-book.component\";\nimport {AdminGuard} from \"./guards/admin.guard\";\nimport {RequestedBooksComponent} from \"./components/requested-books/requested-books.component\";\nimport {AdminHomeComponent} from \"./components/admin-home/admin-home.component\";\nimport {ReportComponent} from \"./components/report/report.component\";\nimport {AddAdminComponent} from \"./components/add-admin/add-admin.component\";\nimport {DefaultGuard} from \"./guards/default.guard\";\nimport {ProfileGuard} from \"./guards/profile.guard\";\nimport {UpdateBookComponent} from \"./components/update-book/update-book.component\";\nimport {EditComponent} from \"./components/profile/edit/edit.component\";\n\nconst routes: Routes = [\n  {path:'', component: HomeComponent, canActivate: [AuthGuard]},\n  {path:'books/:bookName', component: HomeComponent, canActivate: [AuthGuard]},\n  {path:'books/book-details/:id', component: BookDetailsComponent, canActivate: [AuthGuard]},\n  {path:'register', component: RegisterComponent,  canActivate: [DefaultGuard]},\n  {path:'login', component: LoginComponent, canActivate: [DefaultGuard]},\n  {path:'dashboard', component: DashboardComponent,  canActivate: [AuthGuard]},\n  {path:'profile', component: ProfileComponent, canActivate: [ProfileGuard]},\n  {path:'requestBook', component: RequestBookComponent, canActivate: [AuthGuard]},\n  {path:'addBook', component: AddBookComponent, canActivate: [AdminGuard]},\n  {path:'requestedBooks', component: RequestedBooksComponent, canActivate: [AdminGuard]},\n  {path:'adminHome', component: AdminHomeComponent, canActivate: [AdminGuard]},\n  {path:'reports', component: ReportComponent, canActivate: [AdminGuard]},\n  {path:'addAdmin', component: AddAdminComponent, canActivate: [AdminGuard]},\n  {path:'updateBook/:id', component: UpdateBookComponent, canActivate: [AdminGuard]},\n  {path:'profile/edit', component: EditComponent, canActivate: [ProfileGuard]},\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"body{\\r\\n  background: #303030;\\r\\n}\\r\\n\"","module.exports = \"<app-navbar></app-navbar>\\n<div class=\\\"main-container\\\">\\n  <router-outlet></router-outlet>\\n</div>\\n\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { BrowserAnimationsModule } from \"@angular/platform-browser/animations\";\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\n\n//angular material imports\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport {MatTooltipModule} from '@angular/material/tooltip';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatButtonModule} from '@angular/material/button';\nimport { MatSnackBarModule } from \"@angular/material\";\nimport {MatChipsModule} from '@angular/material/chips';\nimport {MatStepperModule} from '@angular/material/stepper';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {MatTableModule} from '@angular/material/table';\nimport {MatPaginatorModule} from '@angular/material/paginator';\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\nimport {MatSortModule} from '@angular/material/sort';\nimport {MatDividerModule} from '@angular/material/divider';\nimport {MatTabsModule} from '@angular/material/tabs';\nimport { Ng2CarouselamosModule } from 'ng2-carouselamos';\nimport { MatBadgeModule } from '@angular/material/badge';\nimport {MatSelectModule} from '@angular/material/select';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { NavbarComponent } from './components/navbar/navbar.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { ProfileComponent } from './components/profile/profile.component'\nimport { SearchBarComponent } from './components/home/search-bar/search-bar.component';\nimport { RegisterComponent } from './components/register/register.component';\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\nimport { SearchResultComponent } from './components/home/search-result/search-result.component';\nimport {HttpClientModule} from \"@angular/common/http\";\nimport { BookDetailsComponent } from './components/book-details/book-details.component';\nimport {AuthGuard} from \"./guards/auth.guard\";\nimport { DialogOverviewDialog } from \"./components/book-details/book-details.component\";\nimport { DialogOverviewDialogRemoveBook} from \"./components/admin-home/admin-home.component\";\nimport { RequestBookComponent } from './components/request-book/request-book.component';\nimport {\n  AddBookComponent, DialogOverviewDialogDeleteBook,\n  DialogOverviewDialogUpdateBook\n} from './components/add-book/add-book.component';\nimport { DialogOverviewDialogRequestedBook, RequestedBooksComponent } from './components/requested-books/requested-books.component';\nimport { AdminHomeComponent } from './components/admin-home/admin-home.component';\nimport { ReportComponent } from './components/report/report.component';\nimport { AddAdminComponent } from './components/add-admin/add-admin.component';\nimport { UpdateBookComponent } from './components/update-book/update-book.component';\nimport { EditComponent } from './components/profile/edit/edit.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbarComponent,\n    LoginComponent,\n    HomeComponent,\n    ProfileComponent,\n    RegisterComponent,\n    DashboardComponent,\n    SearchBarComponent,\n    SearchResultComponent,\n    BookDetailsComponent,\n    DialogOverviewDialog,\n    DialogOverviewDialogRemoveBook,\n    DialogOverviewDialogRequestedBook,\n    DialogOverviewDialogUpdateBook,\n    DialogOverviewDialogDeleteBook,\n    RequestBookComponent,\n    AddBookComponent,\n    RequestedBooksComponent,\n    AdminHomeComponent,\n    ReportComponent,\n    AddAdminComponent,\n    UpdateBookComponent,\n    EditComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n    MatIconModule,\n    MatToolbarModule,\n    MatTooltipModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatCardModule,\n    MatButtonModule,\n    MatSnackBarModule,\n    MatChipsModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatStepperModule,\n    MatDialogModule,\n    MatTableModule,\n    MatPaginatorModule,\n    MatProgressSpinnerModule,\n    MatSortModule,\n    MatDividerModule,\n    MatTabsModule,\n    Ng2CarouselamosModule,\n    MatBadgeModule,\n    MatSelectModule\n  ],\n  entryComponents: [\n    DialogOverviewDialog,\n    DialogOverviewDialogRemoveBook,\n    DialogOverviewDialogRequestedBook,\n    DialogOverviewDialogUpdateBook,\n    DialogOverviewDialogDeleteBook,],\n  providers: [AuthGuard],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \".container{\\r\\n  width: 70%;\\r\\n  margin-left: calc((100vw - 70%)/2);\\r\\n  margin-top: 100px;\\r\\n  display: flex;\\r\\n  flex-direction: column;\\r\\n  align-items: center;\\r\\n}\\r\\n\\r\\n#title{\\r\\n  display: flex;\\r\\n  align-items: center;\\r\\n  justify-content: center;\\r\\n  font-family: 'Bitter', sans-serif;\\r\\n}\\r\\n\\r\\n#form {\\r\\n  width: 70%;\\r\\n  min-width: 250px;\\r\\n  display: flex;\\r\\n  flex-direction: column;\\r\\n  align-items: center;\\r\\n}\\r\\n\\r\\nform{\\r\\n  width: 100%;\\r\\n  margin-top: 10px;\\r\\n}\\r\\n\\r\\n.full-width {\\r\\n  width: 100%;\\r\\n  margin-top: 10px;\\r\\n}\\r\\n\\r\\n.left-section, .right-section{\\r\\n  width: 46%;\\r\\n  float: left;\\r\\n  padding: 2%;\\r\\n}\\r\\n\\r\\n#register-btn{\\r\\n  margin: 0 2%;\\r\\n  width: 96%;\\r\\n  height: 50px;\\r\\n  font-family: 'Quicksand', sans-serif;\\r\\n  font-size: 1em;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"container\\\">\\n  <div id=\\\"title\\\">\\n    <h1><span>Add an Admin</span></h1>\\n  </div>\\n  <div id=\\\"form\\\">\\n    <form (submit)=\\\"onAddAdminSubmit()\\\">\\n      <div class=\\\"left-section\\\">\\n        <mat-form-field appearance=\\\"outline\\\" class=\\\"full-width\\\">\\n          <mat-label>First Name</mat-label>\\n          <input matInput autocomplete=\\\"off\\\" placeholder=\\\"First Name\\\" [formControl]=\\\"firstNameFormControl\\\"\\n                 [errorStateMatcher]=\\\"matcher\\\">\\n          <mat-error *ngIf=\\\"firstNameFormControl.hasError('required')\\\">\\n            First name is <strong>required</strong>\\n          </mat-error>\\n        </mat-form-field>\\n        <mat-form-field appearance=\\\"outline\\\" class=\\\"full-width\\\">\\n          <mat-label>Last Name</mat-label>\\n          <input matInput autocomplete=\\\"off\\\" placeholder=\\\"Last Name\\\" [formControl]=\\\"lastNameFormControl\\\"\\n                 [errorStateMatcher]=\\\"matcher\\\">\\n          <mat-error *ngIf=\\\"lastNameFormControl.hasError('required')\\\">\\n            Last name is <strong>required</strong>\\n          </mat-error>\\n        </mat-form-field>\\n        <mat-form-field appearance=\\\"outline\\\" class=\\\"full-width\\\">\\n          <mat-label>Email</mat-label>\\n          <input matInput autocomplete=\\\"off\\\" placeholder=\\\"Email\\\" [formControl]=\\\"emailFormControl\\\"\\n                 [errorStateMatcher]=\\\"matcher\\\">\\n          <mat-error *ngIf=\\\"emailFormControl.hasError('email') && !emailFormControl.hasError('required')\\\">\\n            Please enter a valid email address\\n          </mat-error>\\n          <mat-error *ngIf=\\\"emailFormControl.hasError('required')\\\">\\n            Email is <strong>required</strong>\\n          </mat-error>\\n        </mat-form-field>\\n      </div>\\n      <div class=\\\"right-section\\\">\\n        <mat-form-field appearance=\\\"outline\\\" class=\\\"full-width\\\">\\n          <mat-label>Password</mat-label>\\n          <input matInput placeholder=\\\"Enter your password\\\" [formControl]=\\\"passwordFormControl\\\" [type]=\\\"hide ? 'password' : 'text'\\\">\\n          <mat-error *ngIf=\\\"passwordFormControl.hasError('required')\\\"> Password is <strong>required</strong></mat-error>\\n          <mat-icon matSuffix (click)=\\\"hide = !hide\\\">{{hide ? 'visibility' : 'visibility_off'}}</mat-icon>\\n        </mat-form-field>\\n        <mat-form-field appearance=\\\"outline\\\" class=\\\"full-width\\\">\\n          <mat-label>Re-enter Password</mat-label>\\n          <input matInput placeholder=\\\"Enter your password\\\" [formControl]=\\\"rePasswordFormControl\\\" [type]=\\\"rehide ? 'password' : 'text'\\\">\\n          <mat-error *ngIf=\\\"rePasswordFormControl.hasError('required')\\\"> Re-enter the password</mat-error>\\n          <mat-icon matSuffix (click)=\\\"rehide = !rehide\\\">{{rehide ? 'visibility' : 'visibility_off'}}</mat-icon>\\n        </mat-form-field>\\n      </div>\\n      <button class=\\\"full-width\\\" id=\\\"register-btn\\\" mat-raised-button color=\\\"primary\\\">Add The Admin</button>\\n    </form>\\n  </div>\\n</div>\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport {ErrorStateMatcher, MatSnackBar} from \"@angular/material\";\nimport {FormControl, FormGroupDirective, NgForm, Validators} from \"@angular/forms\";\nimport {NavigationEnd, Router} from \"@angular/router\";\nimport {AuthService} from \"../../services/auth.service\";\n\nexport class MyErrorStateMatcher implements ErrorStateMatcher {\n  isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\n    const isSubmitted = form && form.submitted;\n    return !!(control && control.invalid && (control.dirty || control.touched || isSubmitted));\n  }\n}\n\n@Component({\n  selector: 'app-add-admin',\n  templateUrl: './add-admin.component.html',\n  styleUrls: ['./add-admin.component.css']\n})\nexport class AddAdminComponent implements OnInit {\n\n  hide = true;\n  rehide = true;\n\n  constructor(\n    private snackBar: MatSnackBar,\n    private router:Router,\n    private authService: AuthService\n  ) {\n    this.router.routeReuseStrategy.shouldReuseRoute = function() {\n      return false;\n    };\n    this.router.events.subscribe((evt) => {\n      if (evt instanceof NavigationEnd) {\n        // trick the Router into believing it's last link wasn't previously loaded\n        this.router.navigated = false;\n      }\n    });\n  }\n\n  ngOnInit() {\n  }\n\n  firstNameFormControl = new FormControl('', [\n    Validators.required,\n  ]);\n\n  lastNameFormControl = new FormControl('', [\n    Validators.required,\n  ]);\n\n  emailFormControl = new FormControl('', [\n    Validators.required,\n    Validators.email,\n  ]);\n\n  passwordFormControl = new FormControl('', [\n    Validators.required,\n  ]);\n\n  rePasswordFormControl = new FormControl('', [\n    Validators.required,\n  ]);\n\n  matcher = new MyErrorStateMatcher();\n\n  onAddAdminSubmit(){\n    if(!this.firstNameFormControl.invalid &&\n      !this.lastNameFormControl.invalid &&\n      !this.emailFormControl.invalid &&\n      !this.passwordFormControl.invalid &&\n      !this.rePasswordFormControl.invalid\n    ) {\n      if (this.passwordFormControl.value !== this.rePasswordFormControl.value){\n        this.snackBar.open('Passwords Does Not Match', 'Close',{\n          duration: 2000\n        });\n      }else{\n        const user = {\n          firstName:  this.firstNameFormControl.value,\n          lastName: this.lastNameFormControl.value,\n          email: this.emailFormControl.value,\n          password: this.passwordFormControl.value,\n          type : 'admin'\n        };\n\n        this.authService.checkAdminAvailability(user).subscribe( data => {\n          if (data['success']){\n            this.authService.registerUser(user).subscribe(data => {\n              if(data['success']){\n                this.snackBar.open(\"Admin Added Successfully\", \"Close\", {\n                  duration: 3000\n                });\n                this.router.navigate(['/addAdmin']);\n              }\n            });\n          }else{\n            this.snackBar.open(\"You Are Already Registered, Please Login\", \"Close\", {\n              duration: 3000\n            });\n          }\n        });\n\n      }\n    }\n\n  }\n\n}\n","module.exports = \".container{\\r\\n  width: 70%;\\r\\n  margin-left: calc((100vw - 70%)/2);\\r\\n  margin-top: 100px;\\r\\n}\\r\\n\\r\\n.content-add-book{\\r\\n  width: 100%;\\r\\n  min-width: 250px;\\r\\n  display: flex;\\r\\n  flex-direction: column;\\r\\n  align-items: center;\\r\\n}\\r\\n\\r\\n.content{\\r\\n  width: 100%;\\r\\n  min-width: 250px;\\r\\n  margin-top: 20px;\\r\\n}\\r\\n\\r\\n#title{\\r\\n  display: flex;\\r\\n  align-items: center;\\r\\n  justify-content: center;\\r\\n  font-family: 'Bitter', sans-serif;\\r\\n}\\r\\n\\r\\n#form {\\r\\n  width: 70%;\\r\\n  min-width: 250px;\\r\\n  display: flex;\\r\\n  flex-direction: column;\\r\\n  align-items: center;\\r\\n}\\r\\n\\r\\nform{\\r\\n  width: 100%;\\r\\n  margin-top: 10px;\\r\\n}\\r\\n\\r\\n.full-width {\\r\\n  width: 100%;\\r\\n  margin-top: 10px;\\r\\n}\\r\\n\\r\\n.left-section, .right-section{\\r\\n  width: 46%;\\r\\n  float: left;\\r\\n  padding: 2%;\\r\\n}\\r\\n\\r\\n#register-btn{\\r\\n  margin: 0 2%;\\r\\n  width: 96%;\\r\\n  height: 50px;\\r\\n  font-family: 'Quicksand', sans-serif;\\r\\n  font-size: 1em;\\r\\n}\\r\\n\\r\\ntable {\\r\\n  width: 100%;\\r\\n}\\r\\n\\r\\n.mat-form-field {\\r\\n  font-size: 14px;\\r\\n  width: 100%;\\r\\n}\\r\\n\\r\\ntd, th {\\r\\n  width: 25%;\\r\\n}\\r\\n\\r\\n.loading-shade {\\r\\n  position: absolute;\\r\\n  top: 0;\\r\\n  left: 0;\\r\\n  bottom: 56px;\\r\\n  right: 0;\\r\\n  background: rgba(0, 0, 0, 0.15);\\r\\n  z-index: 1;\\r\\n  display: flex;\\r\\n  align-items: center;\\r\\n  justify-content: center;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"container\\\">\\n  <mat-tab-group>\\n    <mat-tab label=\\\"Add Book\\\">\\n      <div class=\\\"content-add-book\\\">\\n        <div id=\\\"form\\\">\\n          <form (submit)=\\\"onAddBookSubmit()\\\">\\n            <div class=\\\"left-section\\\">\\n              <mat-form-field appearance=\\\"outline\\\" class=\\\"full-width\\\">\\n                <mat-label>Book Name</mat-label>\\n                <input matInput autocomplete=\\\"off\\\" placeholder=\\\"Book Name\\\" [formControl]=\\\"bookNameFormControl\\\"\\n                       [errorStateMatcher]=\\\"matcher\\\">\\n                <mat-error *ngIf=\\\"bookNameFormControl.hasError('required')\\\">\\n                  First name is <strong>required</strong>\\n                </mat-error>\\n              </mat-form-field>\\n              <mat-form-field appearance=\\\"outline\\\" class=\\\"full-width\\\">\\n                <mat-label>Author</mat-label>\\n                <input matInput autocomplete=\\\"off\\\" placeholder=\\\"Author\\\" [formControl]=\\\"authorFormControl\\\"\\n                       [errorStateMatcher]=\\\"matcher\\\">\\n                <mat-error *ngIf=\\\"authorFormControl.hasError('required')\\\">\\n                  Author name is <strong>required</strong>\\n                </mat-error>\\n              </mat-form-field>\\n              <mat-form-field appearance=\\\"outline\\\" class=\\\"full-width\\\">\\n                <mat-label>Pages</mat-label>\\n                <input matInput autocomplete=\\\"off\\\" placeholder=\\\"Index Number\\\" [formControl]=\\\"pagesFormControl\\\"\\n                       [errorStateMatcher]=\\\"matcher\\\">\\n                <mat-error *ngIf=\\\"pagesFormControl.hasError('pattern')\\\">\\n                  <strong>Only numbers</strong> are allowed\\n                </mat-error>\\n                <mat-error *ngIf=\\\"pagesFormControl.hasError('required')\\\">\\n                  Number of pages is <strong>required</strong>\\n                </mat-error>\\n              </mat-form-field>\\n              <mat-form-field appearance=\\\"outline\\\" class=\\\"full-width\\\">\\n                <mat-label>Edition</mat-label>\\n                <input matInput autocomplete=\\\"off\\\" placeholder=\\\"Edition\\\" [formControl]=\\\"editionFormControl\\\"\\n                       [errorStateMatcher]=\\\"matcher\\\">\\n                <mat-error *ngIf=\\\"editionFormControl.hasError('required')\\\">\\n                  Edition is <strong>required</strong>\\n                </mat-error>\\n                <mat-error *ngIf=\\\"editionFormControl.hasError('pattern')\\\">\\n                  <strong>Only numbers</strong> are allowed\\n                </mat-error>\\n              </mat-form-field>\\n            </div>\\n            <div class=\\\"right-section\\\">\\n              <mat-form-field appearance=\\\"outline\\\" class=\\\"full-width\\\">\\n                <mat-label>Publisher</mat-label>\\n                <input matInput autocomplete=\\\"off\\\" placeholder=\\\"Publisher\\\" [formControl]=\\\"publisherFormControl\\\"\\n                       [errorStateMatcher]=\\\"matcher\\\">\\n                <mat-error *ngIf=\\\"publisherFormControl.hasError('required')\\\">\\n                  Publisher is <strong>required</strong>\\n                </mat-error>\\n              </mat-form-field>\\n              <mat-form-field appearance=\\\"outline\\\" class=\\\"full-width\\\">\\n                <mat-label>Published Year</mat-label>\\n                <input matInput autocomplete=\\\"off\\\" maxlength=\\\"4\\\" placeholder=\\\"Published Year\\\" [formControl]=\\\"yearFormControl\\\"\\n                       [errorStateMatcher]=\\\"matcher\\\">\\n                <mat-error *ngIf=\\\"yearFormControl.hasError('required')\\\">\\n                  Published year is <strong>required</strong>\\n                </mat-error>\\n                <mat-error *ngIf=\\\"yearFormControl.hasError('minlength') || yearFormControl.hasError('pattern')\\\">\\n                  Invalid Year Format\\n                </mat-error>\\n              </mat-form-field>\\n              <mat-form-field appearance=\\\"outline\\\" class=\\\"full-width\\\">\\n                <mat-label>Image Url</mat-label>\\n                <input matInput autocomplete=\\\"off\\\" placeholder=\\\"Image Url\\\" [formControl]=\\\"imageUrlFormControl\\\"\\n                       [errorStateMatcher]=\\\"matcher\\\">\\n                <mat-error *ngIf=\\\"imageUrlFormControl.hasError('required')\\\">\\n                  Image Url is <strong>required</strong>\\n                </mat-error>\\n              </mat-form-field>\\n              <mat-form-field appearance=\\\"outline\\\" class=\\\"full-width\\\">\\n                <mat-label>Number of Copies</mat-label>\\n                <input autocomplete=\\\"off\\\" matInput placeholder=\\\"Number of Copies\\\" [formControl]=\\\"copiesFormControl\\\"\\n                       [errorStateMatcher]=\\\"matcher\\\">\\n                <mat-error *ngIf=\\\"copiesFormControl.hasError('required')\\\">\\n                  Number of copies is <strong>required</strong>\\n                </mat-error>\\n                <mat-error *ngIf=\\\"copiesFormControl.hasError('pattern')\\\">\\n                  <strong>Only numbers</strong> are allowed\\n                </mat-error>\\n              </mat-form-field>\\n            </div>\\n            <button class=\\\"full-width\\\" id=\\\"register-btn\\\" mat-raised-button color=\\\"primary\\\">Add The Book</button>\\n          </form>\\n        </div>\\n      </div>\\n    </mat-tab>\\n    <mat-tab label=\\\"All Books\\\">\\n      <div class=\\\"content\\\">\\n        <mat-form-field>\\n          <input matInput autocomplete=\\\"off\\\" (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Filter\\\">\\n        </mat-form-field>\\n        <div class=\\\"loading-shade\\\"\\n             *ngIf=\\\"isLoadingResults\\\">\\n          <mat-spinner *ngIf=\\\"isLoadingResults\\\"></mat-spinner>\\n        </div>\\n        <div class=\\\"mat-elevation-z8\\\">\\n          <table mat-table [dataSource]=\\\"dataSource\\\" matSort>\\n\\n            <ng-container matColumnDef=\\\"Book Name\\\">\\n              <th mat-header-cell *matHeaderCellDef mat-sort-header> Book Name </th>\\n              <td mat-cell *matCellDef=\\\"let row\\\"> {{row.bookName}} </td>\\n            </ng-container>\\n\\n            <ng-container matColumnDef=\\\"Author\\\">\\n              <th mat-header-cell *matHeaderCellDef mat-sort-header> Author </th>\\n              <td mat-cell *matCellDef=\\\"let row\\\"> {{row.author}} </td>\\n            </ng-container>\\n\\n            <ng-container matColumnDef=\\\"Publisher\\\">\\n              <th mat-header-cell *matHeaderCellDef mat-sort-header> Publisher </th>\\n              <td mat-cell *matCellDef=\\\"let row\\\"> {{row.publisher}} </td>\\n            </ng-container>\\n\\n            <ng-container matColumnDef=\\\"Copies\\\">\\n              <th mat-header-cell *matHeaderCellDef mat-sort-header> Copies </th>\\n              <td mat-cell *matCellDef=\\\"let row\\\"> {{row.copies}} </td>\\n            </ng-container>\\n\\n            <ng-container matColumnDef=\\\"Update Book\\\">\\n              <th mat-header-cell *matHeaderCellDef mat-sort-header> Update </th>\\n              <td mat-cell *matCellDef=\\\"let row\\\">  <button mat-raised-button color=\\\"accent\\\" (click)=\\\"updateBook(row.id, row.bookName)\\\">Update</button> </td>\\n            </ng-container>\\n\\n            <ng-container matColumnDef=\\\"Delete Book\\\">\\n              <th mat-header-cell *matHeaderCellDef mat-sort-header> Delete </th>\\n              <td mat-cell *matCellDef=\\\"let row\\\">  <button mat-raised-button color=\\\"warn\\\" (click)=\\\"deleteBook(row.id,row.bookName, row.arrayIndex)\\\">Delete</button> </td>\\n            </ng-container>\\n\\n            <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n            <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\">\\n            </tr>\\n          </table>\\n\\n          <mat-paginator #paginator [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\" showFirstLastButtons></mat-paginator>\\n        </div>\\n      </div>\\n    </mat-tab>\\n  </mat-tab-group>\\n</div>\\n\"","import {Component, Inject, OnInit, ViewChild} from '@angular/core';\nimport {\n  ErrorStateMatcher, MAT_DIALOG_DATA, MatDialog, MatDialogRef, MatPaginator, MatSnackBar, MatSort,\n  MatTableDataSource\n} from \"@angular/material\";\nimport {FormControl, FormGroupDirective, NgForm, Validators} from \"@angular/forms\";\nimport {BookDataService} from \"../../services/book-data.service\";\nimport {NavigationEnd, Router} from \"@angular/router\";\n\n\nexport class MyErrorStateMatcher implements ErrorStateMatcher {\n  isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\n    const isSubmitted = form && form.submitted;\n    return !!(control && control.invalid && (control.dirty || control.touched || isSubmitted));\n  }\n}\n\n\n@Component({\n  selector: 'app-add-book',\n  templateUrl: './add-book.component.html',\n  styleUrls: ['./add-book.component.css']\n})\nexport class AddBookComponent implements OnInit {\n\n  displayedColumns = ['Book Name', 'Author', 'Publisher', 'Copies', 'Update Book', 'Delete Book'];\n  dataSource: MatTableDataSource<BookData>;\n\n  @ViewChild('paginator') paginator:MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n\n  bookSet: BookData[] = [];\n\n  isLoadingResults = true;\n\n  constructor(\n    private snackBar: MatSnackBar,\n    private bookDataService: BookDataService,\n    private router: Router,\n    private dialog: MatDialog,\n    ) {\n    this.router.routeReuseStrategy.shouldReuseRoute = function() {\n      return false;\n    };\n    this.router.events.subscribe((evt) => {\n      if (evt instanceof NavigationEnd) {\n        // trick the Router into believing it's last link wasn't previously loaded\n        this.router.navigated = false;\n      }\n    });\n  }\n\n  ngOnInit() {\n    this.bookDataService.getAllBooks().subscribe(books => {\n      if (books['success']){\n        let x = 0;\n        books['books'].forEach(item => {\n          let newBook: BookData = {\n            id: item['_id'],\n            bookName: item['name'],\n            author: item['author'],\n            publisher: item['publisher'],\n            copies: item['copies'],\n            arrayIndex : x\n          };\n          x++;\n          this.bookSet.push(newBook);\n        });\n        this.isLoadingResults = false;\n        this.dataSource = new MatTableDataSource(this.bookSet);\n        this.dataSource.paginator = this.paginator;\n        this.dataSource.sort = this.sort;\n      }\n    });\n  }\n\n  bookNameFormControl = new FormControl('', [\n    Validators.required,\n  ]);\n\n  authorFormControl = new FormControl('', [\n    Validators.required,\n  ]);\n\n  pagesFormControl = new FormControl('', [\n    Validators.required,\n    Validators.pattern(/^-?(0|[1-9]\\d*)?$/),\n  ]);\n\n  editionFormControl = new FormControl('', [\n    Validators.required,\n    Validators.pattern(/^-?(0|[1-9]\\d*)?$/),\n  ]);\n\n  publisherFormControl = new FormControl('', [\n    Validators.required,\n  ]);\n\n  yearFormControl = new FormControl('', [\n    Validators.required,\n    Validators.pattern(/^-?(0|[1-9]\\d*)?$/),\n    Validators.minLength(4),\n  ]);\n\n  imageUrlFormControl = new FormControl('', [\n    Validators.required,\n  ]);\n\n  copiesFormControl = new FormControl('', [\n    Validators.required,\n    Validators.pattern(/^-?(0|[1-9]\\d*)?$/),\n  ]);\n\n  matcher = new MyErrorStateMatcher();\n\n  onAddBookSubmit(){\n    if (\n      !this.bookNameFormControl.invalid &&\n      !this.authorFormControl.invalid &&\n      !this.pagesFormControl.invalid &&\n      !this.editionFormControl.invalid &&\n      !this.publisherFormControl.invalid &&\n      !this.yearFormControl.invalid &&\n      !this.imageUrlFormControl.invalid &&\n      !this.copiesFormControl.invalid\n    ){\n      const newBook = {\n        bookName : this.bookNameFormControl.value,\n        author : this.authorFormControl.value,\n        pages : this.pagesFormControl.value,\n        edition : this.editionFormControl.value,\n        publisher : this.publisherFormControl.value,\n        year : this.yearFormControl.value,\n        imageUrl : this.imageUrlFormControl.value,\n        copies : this.copiesFormControl.value,\n        from: Date.now()\n      };\n\n      this.bookDataService.checkBookAvailability(newBook).subscribe(data => {\n        if (data['success'] == false){\n          this.bookDataService.addBook(newBook).subscribe(status => {\n            if (status['success'] == true){\n              this.snackBar.open('Book Added Successfully','Close',{\n                duration: 3000\n              });\n              this.router.navigate(['/addBook']);\n            }\n          });\n        }else if (data['success'] == true){\n          this.snackBar.open('Book Already Exists','Close', {\n            duration: 3000\n          });\n        }\n      });\n    }\n  }\n\n  applyFilter(filterValue: string) {\n    filterValue = filterValue.trim(); // Remove whitespace\n    filterValue = filterValue.toLowerCase(); // Datasource defaults to lowercase matches\n    this.dataSource.filter = filterValue;\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n\n  updateBook(id, bookName){\n    let dialogRef = this.dialog.open(DialogOverviewDialogUpdateBook, {\n      width: '400px',\n      data: { bookName: bookName}\n    });\n    dialogRef.afterClosed().subscribe(result => {\n      if (result == 1) {\n        this.router.navigate(['/updateBook/'+ id]);\n      }\n    });\n  }\n\n  deleteBook(id, bookName, arrayIndex){\n    let dialogRef = this.dialog.open(DialogOverviewDialogDeleteBook, {\n      width: '400px',\n      data: { bookName: bookName}\n    });\n    dialogRef.afterClosed().subscribe(result => {\n      if (result == 1) {\n        let book = {\n          id : id\n        };\n        this.bookDataService.deleteBook(book).subscribe(status => {\n          if (status['success']){\n            this.snackBar.open(\"Deleted Successfully\", \"Close\", {\n              duration: 3000\n            });\n            this.dataSource.data.splice(0,this.dataSource.data.length);\n            this.dataSource = new MatTableDataSource<BookData>(this.dataSource.data);\n            this.dataSource.paginator = this.paginator;\n            this.ngOnInit();\n            //this.router.navigate(['/addBook']);\n          }else{\n            this.snackBar.open(\"Deletion Failed\", \"Close\", {\n              duration: 3000\n            });\n          }\n        });\n      }\n    });\n\n  }\n\n}\n\nexport interface BookData {\n  id : string,\n  bookName : string,\n  author: string,\n  publisher: string,\n  copies: number,\n  arrayIndex: number\n}\n\n@Component({\n  selector: 'dialog-overview-dialog-update-book',\n  templateUrl: 'dialog-overview-dialog-update-book.html',\n})\nexport class DialogOverviewDialogUpdateBook {\n\n  constructor(\n    public dialogRef: MatDialogRef<DialogOverviewDialogUpdateBook>,\n    @Inject(MAT_DIALOG_DATA) public data: any) {\n  }\n\n  onNoClickRemove(): void {\n    this.dialogRef.close();\n  }\n\n}\n\n\n@Component({\n  selector: 'dialog-overview-dialog-delete-book',\n  templateUrl: 'dialog-overview-dialog-delete-book.html',\n})\nexport class DialogOverviewDialogDeleteBook {\n\n  constructor(\n    public dialogRef: MatDialogRef<DialogOverviewDialogDeleteBook>,\n    @Inject(MAT_DIALOG_DATA) public data: any) {\n  }\n\n  onNoClickRemove(): void {\n    this.dialogRef.close();\n  }\n\n}\n\n\n","module.exports = \"<h1 mat-dialog-title>Deleting a Book?</h1>\\r\\n<div mat-dialog-content>\\r\\n  <p style=\\\"font-family: 'Quicksand', sans-serif; font-size: 1.1em\\\">You want to delete the <b> {{data.bookName}}</b>  book?</p>\\r\\n</div>\\r\\n<div mat-dialog-actions>\\r\\n  <button mat-raised-button (click)=\\\"onNoClickRemove()\\\">No Thanks</button>\\r\\n  <button mat-raised-button color=\\\"warn\\\" [mat-dialog-close]=\\\"1\\\" cdkFocusInitial>OK</button>\\r\\n</div>\\r\\n\"","module.exports = \"<h1 mat-dialog-title>Updating a Book?</h1>\\r\\n<div mat-dialog-content>\\r\\n  <p style=\\\"font-family: 'Quicksand', sans-serif; font-size: 1.1em\\\">You want to update the <b> {{data.bookName}}</b>  book?</p>\\r\\n</div>\\r\\n<div mat-dialog-actions>\\r\\n  <button mat-raised-button (click)=\\\"onNoClickRemove()\\\">No Thanks</button>\\r\\n  <button mat-raised-button color=\\\"accent\\\" [mat-dialog-close]=\\\"1\\\" cdkFocusInitial>OK</button>\\r\\n</div>\\r\\n\"","module.exports = \".container{\\r\\n  margin-top: 100px;\\r\\n  width: 70%;\\r\\n  margin-left: calc((100vw - 70%)/2);\\r\\n  font-family: 'Raleway', sans-serif;\\r\\n}\\r\\n\\r\\n.content{\\r\\n  margin-top: 20px;\\r\\n}\\r\\n\\r\\ntable {\\r\\n  width: 100%;\\r\\n}\\r\\n\\r\\n.mat-form-field {\\r\\n  font-size: 14px;\\r\\n  width: 100%;\\r\\n}\\r\\n\\r\\n.loading-shade {\\r\\n  position: absolute;\\r\\n  top: 0;\\r\\n  left: 0;\\r\\n  bottom: 56px;\\r\\n  right: 0;\\r\\n  background: rgba(0, 0, 0, 0.15);\\r\\n  z-index: 1;\\r\\n  display: flex;\\r\\n  align-items: center;\\r\\n  justify-content: center;\\r\\n}\\r\\n\\r\\ntable {\\r\\n  overflow: auto;\\r\\n}\\r\\n\\r\\ntd, th {\\r\\n  overflow: hidden;\\r\\n  word-wrap: break-word;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"content\\\">\\n    <mat-toolbar>Return Books</mat-toolbar>\\n    <mat-form-field>\\n      <input matInput autocomplete=\\\"off\\\" (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Filter\\\">\\n    </mat-form-field>\\n    <div class=\\\"loading-shade\\\"\\n         *ngIf=\\\"isLoadingResults\\\">\\n      <mat-spinner *ngIf=\\\"isLoadingResults\\\"></mat-spinner>\\n    </div>\\n    <div class=\\\"mat-elevation-z8\\\">\\n      <table mat-table [dataSource]=\\\"dataSource\\\" matSort>\\n\\n          <ng-container matColumnDef=\\\"Book Name\\\" cdkColumnDef=\\\"bookName\\\">\\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> Book Name </th>\\n          <td mat-cell *matCellDef=\\\"let row\\\"> {{row.bookName}} </td>\\n        </ng-container>\\n\\n        <ng-container matColumnDef=\\\"Author\\\">\\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> Author </th>\\n          <td mat-cell *matCellDef=\\\"let row\\\"> {{row.author}} </td>\\n        </ng-container>\\n\\n        <ng-container matColumnDef=\\\"Student Index\\\">\\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> Student Index </th>\\n          <td mat-cell *matCellDef=\\\"let row\\\"> {{row.indexNumber}} </td>\\n        </ng-container>\\n\\n        <ng-container matColumnDef=\\\"Burrowed Date\\\">\\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> Burrowed Date </th>\\n          <td mat-cell *matCellDef=\\\"let row\\\"> {{row.burrowedDate}} </td>\\n        </ng-container>\\n\\n        <ng-container matColumnDef=\\\"Due Date\\\">\\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> Due Date </th>\\n          <td mat-cell *matCellDef=\\\"let row\\\"> {{row.dueDate}} </td>\\n        </ng-container>\\n\\n        <ng-container matColumnDef=\\\"Fine\\\">\\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> Fine (LKR) </th>\\n          <td mat-cell *matCellDef=\\\"let row\\\"> {{row.fine}} </td>\\n        </ng-container>\\n\\n        <ng-container matColumnDef=\\\"Return\\\">\\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> Return </th>\\n          <td mat-cell *matCellDef=\\\"let row\\\"> <button mat-raised-button color=\\\"primary\\\" (click)=\\\"returnBook(row.bookId, row.bookName, row.indexNumber, row.reservedDate, row.fine, row.arrayIndex)\\\">Return</button> </td>\\n        </ng-container>\\n\\n        <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n        <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\">\\n        </tr>\\n      </table>\\n\\n      <mat-paginator #paginator [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\" showFirstLastButtons></mat-paginator>\\n    </div>\\n  </div>\\n</div>\\n\"","import {Component, Inject, OnInit, ViewChild} from '@angular/core';\nimport {\n  MAT_DIALOG_DATA, MatDialog, MatDialogRef, MatPaginator, MatSnackBar, MatSort,\n  MatTableDataSource\n} from \"@angular/material\";\nimport {AuthService} from \"../../services/auth.service\";\nimport {BookDataService} from \"../../services/book-data.service\";\nimport {AdminService} from \"../../services/admin.service\";\nimport {map} from \"rxjs/internal/operators\";\nimport {NavigationEnd, Router} from \"@angular/router\";\n\n@Component({\n  selector: 'app-admin-home',\n  templateUrl: './admin-home.component.html',\n  styleUrls: ['./admin-home.component.css']\n})\nexport class AdminHomeComponent implements OnInit {\n\n  displayedColumns = ['Book Name', 'Author', 'Student Index', 'Burrowed Date', 'Due Date', 'Fine', 'Return'];\n  dataSource: MatTableDataSource<BurrowedBookData>;\n\n  @ViewChild('paginator') paginator:MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n\n  user: Object;\n  burrowedBooks: BurrowedBookData[] = [];\n\n  isLoadingResults = true;\n  isLoadingResultsBookRead = true;\n\n  bookInsert(bookDetail:any, indexNumber:number, arrayIndex:number) {\n    return this.bookDataService.getBookById(bookDetail.bookId).pipe(map(book => {\n      let fine = \"0.00\";\n      if (Date.now()  > (bookDetail.date + 604800000)){\n        fine = Number(((Date.now()  - (bookDetail.date + 604800000))/86400000) * 30).toFixed(2);\n      }\n      let newBook :BurrowedBookData = {\n        arrayIndex : arrayIndex,\n        bookId: book['book']['_id'],\n        bookName: book['book']['name'],\n        author: book['book']['author'],\n        indexNumber: indexNumber,\n        burrowedDate: new Date(bookDetail.date).toLocaleString(),\n        reservedDate : bookDetail.date,\n        dueDate: new Date(bookDetail.date + 604800000).toLocaleString(),\n        fine : fine\n      };\n      this.burrowedBooks.push(newBook);\n\n      this.dataSource = new MatTableDataSource(this.burrowedBooks);\n      this.dataSource.paginator = this.paginator;\n      this.dataSource.sort = this.sort;\n    }));\n  }\n\n  constructor(\n    private authService: AuthService,\n    private adminService:AdminService,\n    private bookDataService : BookDataService,\n    private dialog: MatDialog,\n    private router: Router,\n    private snackBar: MatSnackBar) {\n    this.router.routeReuseStrategy.shouldReuseRoute = function() {\n      return false;\n    };\n    this.router.events.subscribe((evt) => {\n      if (evt instanceof NavigationEnd) {\n        // trick the Router into believing it's last link wasn't previously loaded\n        this.router.navigated = false;\n      }\n    });\n  }\n\n  ngOnInit() {\n    this.adminService.getAllUsers().subscribe(users => {\n      let x = 0;\n      users['users'].forEach(item => {\n\n        let len = item['reservedBooks'].length;\n        for(let i = 0; i < len; i++){\n          this.bookInsert(item['reservedBooks'][i], item['indexNumber'], x).subscribe(_ => {});\n          x++;\n        }\n      });\n    });\n    this.isLoadingResults = false;\n    this.isLoadingResultsBookRead = false;\n  }\n\n  applyFilter(filterValue: string) {\n    filterValue = filterValue.trim(); // Remove whitespace\n    filterValue = filterValue.toLowerCase(); // Datasource defaults to lowercase matches\n    this.dataSource.filter = filterValue;\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n\n  returnBook(id: string, bookName: string, indexNumber: number, reservedDate: string, fineAmount: number, arrayIndex: number){\n    let dialogRef = this.dialog.open(DialogOverviewDialogRemoveBook, {\n      width: '400px',\n      data: { name: bookName}\n    });\n    dialogRef.afterClosed().subscribe(result => {\n      if (result == 1) {\n        let detail = {\n          bookId: id,\n          indexNumber : indexNumber,\n          reservedDate: reservedDate\n        };\n        this.authService.returnBook(detail).subscribe(data => {\n          if (data['success'] == true){\n            this.bookDataService.getBookById(id).subscribe(data => {\n              if(data['success'] == true){\n                let bookDetails = {\n                  bookId : data['book']['_id'],\n                  copies : data['book']['copies']\n                };\n                let bookName  = data['book']['name'];\n                this.authService.bookCountUp(bookDetails).subscribe(data => {\n                  if (data['success'] == true){\n                    if (fineAmount > 0){\n                      let fine = {\n                        indexNumber : indexNumber,\n                        bookName : bookName,\n                        amount : fineAmount\n                      };\n                      this.adminService.addFine(fine).subscribe(result => {\n                        if (result['success']){\n                          this.snackBar.open(\"Book Returned Successfully\", 'Close', {\n                            duration: 2000\n                          });\n                        }else{\n                          this.snackBar.open(\"Book Return Failed\", 'Close', {\n                            duration: 2000\n                          });\n                        }\n                      });\n                    }else{\n                      this.snackBar.open(\"Book Returned Successfully\", 'Close', {\n                        duration: 2000\n                      });\n                    }\n                    this.dataSource.data.splice(arrayIndex,1);\n                    this.dataSource = new MatTableDataSource<BurrowedBookData>(this.dataSource.data);\n                    this.dataSource.paginator = this.paginator;\n                    this.router.navigate(['/adminHome']);\n                  }\n                })\n              }\n            });\n          }\n        });\n      }\n    });\n\n  }\n\n}\n\nexport interface BurrowedBookData{\n  arrayIndex: number,\n  bookId: string,\n  bookName: string,\n  author: string,\n  indexNumber: number,\n  burrowedDate: string,\n  reservedDate: string,\n  dueDate: string,\n  fine: string\n}\n\n@Component({\n  selector: 'dialog-overview-dialog-return-book',\n  templateUrl: 'dialog-overview-dialog-return-book.html',\n})\nexport class DialogOverviewDialogRemoveBook {\n\n  book$:String;\n\n  constructor(\n    public dialogRef: MatDialogRef<DialogOverviewDialogRemoveBook>,\n    @Inject(MAT_DIALOG_DATA) public data: any) {\n    this.book$ = data.name;\n  }\n\n  onNoClickRemove(): void {\n    this.dialogRef.close();\n  }\n\n}\n","module.exports = \"<h1 mat-dialog-title>Returning a Book?</h1>\\r\\n<div mat-dialog-content>\\r\\n  <p style=\\\"font-family: 'Quicksand', sans-serif; font-size: 1.1em\\\">You want to return <b> {{data.name}}</b>  book?</p>\\r\\n</div>\\r\\n<div mat-dialog-actions>\\r\\n  <button mat-button (click)=\\\"onNoClickRemove()\\\">No Thanks</button>\\r\\n  <button mat-button [mat-dialog-close]=\\\"1\\\" cdkFocusInitial>OK</button>\\r\\n</div>\\r\\n\"","module.exports = \".container{\\r\\n  margin-top: 100px;\\r\\n  width: 70%;\\r\\n  margin-left: calc((100vw - 70%)/2);\\r\\n  font-family: 'Raleway', sans-serif;\\r\\n}\\r\\n\\r\\n.card {\\r\\n  max-width: 200px;\\r\\n  box-shadow: none !important;\\r\\n}\\r\\n\\r\\n.image, .desc{\\r\\n  float: left;\\r\\n}\\r\\n\\r\\n.image{\\r\\n  max-width: 300px;\\r\\n}\\r\\n\\r\\n.desc{\\r\\n  margin-left: 20px;\\r\\n}\\r\\n\\r\\n\"","module.exports = \"<div *ngIf=\\\"book$\\\" class=\\\"container\\\">\\n  <div class=\\\"image\\\">\\n    <mat-card class=\\\"card\\\">\\n      <img mat-card-image src=\\\"{{ book$.imageUrl }}\\\" alt=\\\"{{ book$.name }}\\\">\\n    </mat-card>\\n  </div>\\n  <div class=\\\"desc\\\">\\n    <h1>{{ book$.name }}</h1><br>\\n    <h3>Author : {{ book$.author }}</h3><br>\\n    <h3>Pages : {{ book$.pages }}</h3><br>\\n    <h3>Edition : {{ book$.edition }}</h3><br>\\n    <h3>Publisher : {{ book$.publisher }}</h3><br>\\n    <h3>Year : {{ book$.year }}</h3><br>\\n    <mat-chip-list>\\n      <mat-chip color=\\\"{{chipColor}}\\\" selected=\\\"true\\\">{{availability}}</mat-chip>\\n      <button *ngIf=\\\"availability == 'Available'\\\" (click)=\\\"reserveCopy()\\\" mat-button color=\\\"primary\\\">Reserve a Copy</button>\\n    </mat-chip-list>\\n  </div>\\n</div>\\n\"","import {Component, Inject, OnInit} from '@angular/core';\nimport {BookDataService} from \"../../services/book-data.service\";\nimport {ActivatedRoute, Router} from \"@angular/router\";\nimport {Observable} from \"rxjs/index\";\nimport {MatDialog, MatDialogRef, MAT_DIALOG_DATA, MatSnackBar} from '@angular/material';\nimport {AuthService} from \"../../services/auth.service\";\n\n@Component({\n  selector: 'app-book-details',\n  templateUrl: './book-details.component.html',\n  styleUrls: ['./book-details.component.css']\n})\nexport class BookDetailsComponent implements OnInit {\n\n  id$: Object;\n  book$: Object;\n  chipColor: String = 'warn';\n  availability: String = \"Unavailable\";\n\n  constructor(\n    private bookDataService: BookDataService,\n    private authService: AuthService,\n    private route: ActivatedRoute,\n    private dialog: MatDialog,\n    private snackBar: MatSnackBar,\n    private router: Router\n  ) {\n    this.route.params.subscribe(params => this.id$ = params.id);\n  }\n\n  ngOnInit() {\n    this.bookDataService.getBookById(this.id$).subscribe(\n      book => {\n        this.book$ = book['book'];\n        if (this.book$['copies'] > 0){\n          this.chipColor = 'primary';\n          this.availability = 'Available';\n        }\n      }\n    );\n  }\n\n  reserveCopy(){\n    let dialogRef = this.dialog.open(DialogOverviewDialog, {\n      width: '400px',\n      data: { name: this.book$['name']}\n    });\n    dialogRef.afterClosed().subscribe(result => {\n      if (result == 1){\n        let detail = {\n          bookId: this.book$['_id'],\n          email: localStorage.getItem('user').split('\"email\":\"')[1].split('\",\"')[0]\n        };\n        this.authService.burrowBook(detail).subscribe(data => {\n          if (data['success']){\n            this.bookDataService.getBookById(this.book$['_id']).subscribe(data => {\n              if(data['success'] == true){\n                let bookDetails = {\n                  bookId : data['book']['_id'],\n                  copies : data['book']['copies']\n                };\n                this.authService.bookCountDown(bookDetails).subscribe(data => {\n                  if (data['success'] == true){\n                    this.snackBar.open(\"Book Reserved\", 'Close', {\n                      duration: 2000\n                    });\n                    this.router.navigate(['']);\n                  }\n                })\n              }\n            });\n          }\n        });\n      }\n    });\n  }\n\n}\n\n@Component({\n  selector: 'dialog-overview-dialog',\n  templateUrl: 'dialog-overview-dialog.html',\n})\nexport class DialogOverviewDialog {\n\n  book$:String;\n\n  constructor(\n    public dialogRef: MatDialogRef<DialogOverviewDialog>,\n    @Inject(MAT_DIALOG_DATA) public data: any) {\n    this.book$ = data.name;\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n}\n","module.exports = \"<h1 mat-dialog-title>Are you Sure?</h1>\\r\\n<div mat-dialog-content>\\r\\n  <p style=\\\"font-family: 'Quicksand', sans-serif; font-size: 1.1em\\\">You want to reserve <b>{{book$}}</b>  book?</p>\\r\\n</div>\\r\\n<div mat-dialog-actions>\\r\\n  <button mat-button (click)=\\\"onNoClick()\\\">No Thanks</button>\\r\\n  <button mat-button [mat-dialog-close]=\\\"1\\\" cdkFocusInitial>OK</button>\\r\\n</div>\\r\\n\"","module.exports = \".container{\\r\\n  margin-top: 100px;\\r\\n  width: 70%;\\r\\n  margin-left: calc((100vw - 70%)/2);\\r\\n  font-family: 'Raleway', sans-serif;\\r\\n}\\r\\n\\r\\n.content{\\r\\n  margin-top: 20px;\\r\\n}\\r\\n\\r\\n.welcome-text{\\r\\n  font-size: 1.5em;\\r\\n  font-family: 'Quicksand', sans-serif;\\r\\n  font-weight: 500;\\r\\n  margin-bottom: 10px;\\r\\n}\\r\\n\\r\\ntable {\\r\\n  width: 100%;\\r\\n}\\r\\n\\r\\n.mat-form-field {\\r\\n  font-size: 14px;\\r\\n  width: 100%;\\r\\n}\\r\\n\\r\\ntd, th {\\r\\n  width: 25%;\\r\\n}\\r\\n\\r\\n.loading-shade {\\r\\n  position: absolute;\\r\\n  top: 0;\\r\\n  left: 0;\\r\\n  bottom: 56px;\\r\\n  right: 0;\\r\\n  background: rgba(0, 0, 0, 0.15);\\r\\n  z-index: 1;\\r\\n  display: flex;\\r\\n  align-items: center;\\r\\n  justify-content: center;\\r\\n}\\r\\n\\r\\ntr.mat-footer-row {\\r\\n  font-weight: bold;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"container\\\">\\n  <mat-card *ngIf=\\\"user\\\" class=\\\"welcome-text\\\">Welcome, {{user.firstName}} {{user.lastName}}</mat-card>\\n  <mat-tab-group  #tabGroup (selectedIndexChange)=\\\"_setDataSource($event)\\\">\\n    <mat-tab label=\\\"Your Books\\\">\\n      <div class=\\\"content\\\">\\n        <mat-toolbar>Reserved Books</mat-toolbar>\\n        <mat-form-field>\\n          <input matInput autocomplete=\\\"off\\\" (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Filter\\\">\\n        </mat-form-field>\\n        <div class=\\\"loading-shade\\\"\\n             *ngIf=\\\"isLoadingResults\\\">\\n          <mat-spinner *ngIf=\\\"isLoadingResults\\\"></mat-spinner>\\n        </div>\\n        <div class=\\\"mat-elevation-z8\\\">\\n          <table mat-table [dataSource]=\\\"dataSource\\\" matSort>\\n\\n            <ng-container matColumnDef=\\\"Reserved Date\\\">\\n              <th mat-header-cell *matHeaderCellDef mat-sort-header> Reserved Date </th>\\n              <td mat-cell *matCellDef=\\\"let row\\\"> {{row.reservedDate | date}} </td>\\n            </ng-container>\\n\\n            <ng-container matColumnDef=\\\"Book Name\\\">\\n              <th mat-header-cell *matHeaderCellDef mat-sort-header> Book Name </th>\\n              <td mat-cell *matCellDef=\\\"let row\\\"> {{row.bookName}} </td>\\n            </ng-container>\\n\\n            <ng-container matColumnDef=\\\"Author\\\">\\n              <th mat-header-cell *matHeaderCellDef mat-sort-header> Author </th>\\n              <td mat-cell *matCellDef=\\\"let row\\\"> {{row.author}} </td>\\n            </ng-container>\\n\\n            <ng-container matColumnDef=\\\"Due Date\\\">\\n              <th mat-header-cell *matHeaderCellDef mat-sort-header> Due Date </th>\\n              <td mat-cell *matCellDef=\\\"let row\\\"> {{row.dueDate}} </td>\\n            </ng-container>\\n\\n            <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n            <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\">\\n            </tr>\\n          </table>\\n\\n          <mat-paginator #paginator [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\" showFirstLastButtons></mat-paginator>\\n        </div>\\n      </div>\\n      <div class=\\\"content\\\">\\n        <mat-toolbar>Books You Read</mat-toolbar>\\n        <mat-form-field>\\n          <input matInput autocomplete=\\\"off\\\" (keyup)=\\\"applyFilterRead($event.target.value)\\\" placeholder=\\\"Filter\\\">\\n        </mat-form-field>\\n        <div class=\\\"loading-shade\\\"\\n             *ngIf=\\\"isLoadingResultsBookRead\\\">\\n          <mat-spinner *ngIf=\\\"isLoadingResultsBookRead\\\"></mat-spinner>\\n        </div>\\n        <div class=\\\"mat-elevation-z8\\\">\\n          <table mat-table [dataSource]=\\\"dataSourceBookRead\\\" matSort>\\n\\n            <ng-container matColumnDef=\\\"Reserved Date\\\">\\n              <th mat-header-cell *matHeaderCellDef mat-sort-header> Reserved Date </th>\\n              <td mat-cell *matCellDef=\\\"let row\\\"> {{row.reservedDate | date}} </td>\\n            </ng-container>\\n\\n            <ng-container matColumnDef=\\\"Book Name\\\">\\n              <th mat-header-cell *matHeaderCellDef mat-sort-header> Book Name </th>\\n              <td mat-cell *matCellDef=\\\"let row\\\"> {{row.bookName}} </td>\\n            </ng-container>\\n\\n            <ng-container matColumnDef=\\\"Author\\\">\\n              <th mat-header-cell *matHeaderCellDef mat-sort-header> Author </th>\\n              <td mat-cell *matCellDef=\\\"let row\\\"> {{row.author}} </td>\\n            </ng-container>\\n\\n            <ng-container matColumnDef=\\\"Returned Date\\\">\\n              <th mat-header-cell *matHeaderCellDef mat-sort-header> Returned Date </th>\\n              <td mat-cell *matCellDef=\\\"let row\\\"> {{row.returnedDate | date}} </td>\\n            </ng-container>\\n\\n            <tr mat-header-row *matHeaderRowDef=\\\"displayedColumnsBookRead\\\"></tr>\\n            <tr mat-row *matRowDef=\\\"let row; columns: displayedColumnsBookRead;\\\">\\n            </tr>\\n          </table>\\n\\n          <mat-paginator #paginatorRead [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\" showFirstLastButtons></mat-paginator>\\n        </div>\\n      </div>\\n    </mat-tab>\\n    <mat-tab label=\\\"Fines\\\">\\n      <div class=\\\"content\\\">\\n        <div class=\\\"mat-elevation-z8\\\">\\n          <table mat-table [dataSource]=\\\"dataSourceFines\\\" matSort>\\n\\n            <ng-container matColumnDef=\\\"Book Name\\\">\\n              <th mat-header-cell *matHeaderCellDef mat-sort-header> Book Name </th>\\n              <td mat-cell *matCellDef=\\\"let row\\\"> {{row.bookName}} </td>\\n              <td mat-footer-cell *matFooterCellDef> Total </td>\\n            </ng-container>\\n\\n            <ng-container matColumnDef=\\\"Author\\\">\\n              <th mat-header-cell *matHeaderCellDef mat-sort-header> Author </th>\\n              <td mat-cell *matCellDef=\\\"let row\\\"> {{row.author}} </td>\\n              <td mat-footer-cell *matFooterCellDef></td>\\n            </ng-container>\\n\\n            <ng-container matColumnDef=\\\"Due Date\\\">\\n              <th mat-header-cell *matHeaderCellDef mat-sort-header> Due Date </th>\\n              <td mat-cell *matCellDef=\\\"let row\\\"> {{row.dueDate}} </td>\\n              <td mat-footer-cell *matFooterCellDef></td>\\n            </ng-container>\\n\\n            <ng-container matColumnDef=\\\"Fine\\\">\\n              <th mat-header-cell *matHeaderCellDef mat-sort-header> Fine (LKR) </th>\\n              <td mat-cell *matCellDef=\\\"let row\\\"> {{row.fine}} </td>\\n              <td mat-footer-cell *matFooterCellDef> {{totalFines.toFixed(2)}} </td>\\n            </ng-container>\\n\\n            <tr mat-header-row *matHeaderRowDef=\\\"displayedColumnsFines\\\"></tr>\\n            <tr mat-row *matRowDef=\\\"let row; columns: displayedColumnsFines;\\\"></tr>\\n            <tr mat-footer-row *matFooterRowDef=\\\"displayedColumnsFines; sticky: true\\\"></tr>\\n          </table>\\n          <mat-paginator #paginatorFine [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\" showFirstLastButtons></mat-paginator>\\n        </div>\\n      </div>\\n    </mat-tab>\\n  </mat-tab-group>\\n</div>\\n\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport {MatPaginator, MatSort, MatTableDataSource} from '@angular/material';\nimport {AuthService} from \"../../services/auth.service\";\nimport {BookDataService} from \"../../services/book-data.service\";\nimport {map} from \"rxjs/internal/operators\";\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n\n  displayedColumns = ['Reserved Date', 'Book Name', 'Author', 'Due Date'];\n  displayedColumnsBookRead = ['Reserved Date', 'Book Name', 'Author', 'Returned Date'];\n  displayedColumnsFines = ['Book Name', 'Author', 'Due Date', 'Fine'];\n  dataSource: MatTableDataSource<ReservedBookData>;\n  dataSourceBookRead: MatTableDataSource<ReadBookData>;\n  dataSourceFines: MatTableDataSource<FineData>;\n\n  @ViewChild('paginator') paginator:MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n  @ViewChild('paginatorRead') paginatorRead:MatPaginator;\n  @ViewChild(MatSort) sortRead: MatSort;\n  @ViewChild('paginatorFine') paginatorFine:MatPaginator;\n  @ViewChild(MatSort) sortFine: MatSort;\n\n  user: Object;\n  booksReserved: Object;\n  booksRead: Object;\n  reservedBooks: ReservedBookData[] = [];\n  readBooks: ReadBookData[] = [];\n  fineBooks: FineData[] = [];\n  isLoadingResults = true;\n  isLoadingResultsBookRead = true;\n  totalFines = 0;\n\n  ngAfterViewInit() {\n    if (this.dataSource != undefined && this.dataSourceFines != undefined && this.dataSourceBookRead != undefined){\n      this.dataSource.paginator = this.paginator;\n      this.dataSourceFines.paginator = this.paginatorFine;\n      this.dataSourceBookRead.paginator = this.paginatorRead;\n    }\n  }\n\n  bookInsert(i:any) {\n    return this.bookData.getBookById(this.booksReserved[i].bookId).pipe(map(book => {\n      let newBook :ReservedBookData = {\n        reservedDate: new Date(this.booksReserved[i].date).toLocaleString(),\n        bookName: book['book']['name'],\n        author: book['book']['author'],\n        dueDate: new Date(this.booksReserved[i].date + 604800000).toLocaleString()\n      };\n      this.reservedBooks.push(newBook);\n\n      this.dataSource = new MatTableDataSource(this.reservedBooks);\n      this.dataSource.paginator = this.paginator;\n      this.dataSource.sort = this.sort;\n    }));\n  }\n\n  bookReadInsert(i:any) {\n    return this.bookData.getBookById(this.booksRead[i].bookId).pipe(map(book => {\n      let newBook :ReadBookData = {\n        reservedDate: new Date(this.booksRead[i].reservedDate).toLocaleString(),\n        bookName: book['book']['name'],\n        author: book['book']['author'],\n        returnedDate: new Date(this.booksRead[i].returnedDate).toLocaleString()\n      };\n      this.readBooks.push(newBook);\n\n      this.dataSourceBookRead = new MatTableDataSource(this.readBooks);\n      this.dataSourceBookRead.paginator = this.paginatorRead;\n      this.dataSourceBookRead.sort = this.sortRead;\n    }));\n  }\n\n  fineInsert(i:any) {\n    return this.bookData.getBookById(this.booksReserved[i].bookId).pipe(map(book => {\n     /* if (Date.now() + 259200000  > (this.booksReserved[i].date + 86400000)){\n        this.totalFines = this.totalFines +  ((Date.now() + 259200000  - (this.booksReserved[i].date + 86400000))/86400000) * 3;\n        let newBook :FineData = {\n          bookName: book['book']['name'],\n          author: book['book']['author'],\n          dueDate: new Date(this.booksReserved[i].date + 604800000).toLocaleString(),\n          fine: Number(((Date.now() + 259200000  - (this.booksReserved[i].date + 86400000))/86400000) * 3).toFixed(2)\n        };\n        this.fineBooks.push(newBook);\n      }*/\n\n      if (Date.now()  > (this.booksReserved[i].date + 604800000)){\n        let newBook :FineData = {\n          bookName: book['book']['name'],\n          author: book['book']['author'],\n          dueDate: new Date(this.booksReserved[i].date + 604800000).toLocaleString(),\n          fine: Number(((Date.now()  - (this.booksReserved[i].date + 604800000))/86400000) * 30).toFixed(2)\n        };\n        this.fineBooks.push(newBook);\n      }\n\n      this.dataSourceFines = new MatTableDataSource(this.fineBooks);\n      this.dataSourceFines.paginator = this.paginatorFine;\n      this.dataSourceFines.sort = this.sortFine;\n    }));\n  }\n\n    constructor(private authService:AuthService, private bookData : BookDataService) {\n  }\n\n  ngOnInit() {\n    this.authService.getProfile().subscribe(profile => {\n        this.user = profile['user'];\n\n        this.authService.getReservedBooks(this.user['email']).subscribe(data => {\n          this.booksReserved = data['books'].reservedBooks;\n          let length = Object.keys(this.booksReserved).length;\n          if (length == 0){\n            this.dataSource = new MatTableDataSource(this.reservedBooks);\n            this.dataSource.paginator = this.paginator;\n            this.dataSource.sort = this.sort;\n\n            this.dataSourceFines = new MatTableDataSource(this.fineBooks);\n            this.dataSourceFines.paginator = this.paginatorFine;\n            this.dataSourceFines.sort = this.sortFine;\n          }\n          for (let i = 0; i < length; i++) {\n              this.bookInsert(i).subscribe(_ => {});\n              this.fineInsert(i).subscribe(_ => {});\n            }\n          });\n\n        this.authService.getReadBooks(this.user['email']).subscribe(data => {\n          this.booksRead = data['books'].pastBooks;\n          let length = Object.keys(this.booksRead).length;\n          if (length == 0){\n            this.dataSourceBookRead = new MatTableDataSource(this.readBooks);\n            this.dataSourceBookRead.paginator = this.paginatorRead;\n            this.dataSourceBookRead.sort = this.sortRead;\n          }else{\n            for (let i = 0; i < length; i++) {\n              this.bookReadInsert(i).subscribe(_ => {});\n            }\n          }\n        });\n\n        },\n      error => {\n        console.log(error);\n        return false;\n      });\n    this.isLoadingResults = false;\n    this.isLoadingResultsBookRead = false;\n  }\n\n\n\n  applyFilter(filterValue: string) {\n    filterValue = filterValue.trim(); // Remove whitespace\n    filterValue = filterValue.toLowerCase(); // Datasource defaults to lowercase matches\n    this.dataSource.filter = filterValue;\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n\n  applyFilterRead(filterValue: string) {\n    filterValue = filterValue.trim(); // Remove whitespace\n    filterValue = filterValue.toLowerCase(); // Datasource defaults to lowercase matches\n    this.dataSourceBookRead.filter = filterValue;\n    if (this.dataSourceBookRead.paginator) {\n      this.dataSourceBookRead.paginator.firstPage();\n    }\n  }\n\n  _setDataSource(indexNumber) {\n    this.dataSource.paginator = this.paginator;\n    this.dataSourceFines.paginator = this.paginatorFine;\n    this.dataSourceBookRead.paginator = this.paginatorRead;\n    setTimeout(() => {\n      switch (indexNumber) {\n        case 0:\n          !this.dataSource.paginator ? this.dataSource.paginator = this.paginator : null;\n          !this.dataSourceBookRead.paginator ? this.dataSourceBookRead.paginator = this.paginatorRead : null;\n          break;\n        case 1:\n          !this.dataSourceFines.paginator ? this.dataSourceFines.paginator = this.paginatorFine : null;\n      }\n    });\n  }\n}\n\nexport interface ReservedBookData {\n  reservedDate: string;\n  bookName: string;\n  author: string;\n  dueDate: string;\n}\n\nexport interface ReadBookData {\n  reservedDate: string;\n  bookName: string;\n  author: string;\n  returnedDate: string;\n}\n\nexport interface FineData {\n  bookName: string;\n  author: string;\n  dueDate: string;\n  fine: string;\n}\n\n\n","module.exports = \"\"","module.exports = \"<app-search-bar></app-search-bar>\\n<app-search-result></app-search-result>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from \"@angular/router\";\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor(private router:Router) {  }\n\n  ngOnInit() {  }\n}\n","module.exports = \"#search-box{\\r\\n  width: 100vw;\\r\\n  padding-top: 20px;\\r\\n  display: flex;\\r\\n  align-items:center;\\r\\n  justify-content: center;\\r\\n}\\r\\n\\r\\n#search-icon{\\r\\n  cursor: pointer;\\r\\n}\\r\\n\\r\\n::ng-deep .mat-form-field {\\r\\n  width: 70%;\\r\\n}\\r\\n\"","module.exports = \"<div id=\\\"search-box\\\">\\n  <mat-form-field appearance=\\\"outline\\\">\\n    <mat-label>Search</mat-label>\\n    <input (keyup.enter)=\\\"searchBook($event)\\\" autocomplete=\\\"off\\\" matInput placeholder=\\\"Enter Book Name\\\">\\n    <mat-icon id=\\\"search-icon\\\" matSuffix>search</mat-icon>\\n  </mat-form-field>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {NavigationEnd, NavigationStart, Router} from \"@angular/router\";\n\n@Component({\n  selector: 'app-search-bar',\n  templateUrl: './search-bar.component.html',\n  styleUrls: ['./search-bar.component.css']\n})\nexport class SearchBarComponent implements OnInit {\n\n  constructor(private router: Router) {\n    this.router.routeReuseStrategy.shouldReuseRoute = function(){\n      return false;\n    };\n\n    this.router.events.subscribe((evt) => {\n      if (evt instanceof NavigationEnd) {\n        // trick the Router into believing it's last link wasn't previously loaded\n        this.router.navigated = false;\n      }\n    });\n  }\n\n  ngOnInit() {\n  }\n\n  searchBook(event:any) {\n    let bookName = event.target.value;\n    this.router.navigate(['/books/'+bookName]);\n  }\n\n}\n","module.exports = \".container{\\r\\n  width: 70%;\\r\\n  margin-left: calc((100vw - 70%)/2);\\r\\n  display: flex;\\r\\n  flex-direction: column;\\r\\n}\\r\\n\\r\\nul{\\r\\n  list-style-type: none;\\r\\n  margin: 0;\\r\\n  padding: 0;\\r\\n}\\r\\n\\r\\nli{\\r\\n  padding: 20px;\\r\\n  float: left;\\r\\n}\\r\\n\\r\\n.card {\\r\\n  width: 220px;\\r\\n}\\r\\n\\r\\nbody{\\r\\n  overflow-x: hidden;\\r\\n}\\r\\n\\r\\n#container1 {\\r\\n  width: 100%;\\r\\n  margin: 1em auto;\\r\\n  padding: 0;\\r\\n  background:#fff;\\r\\n}\\r\\n\\r\\n.items {\\r\\n  max-width:300px;\\r\\n  height:400px;\\r\\n  margin: 0 10px;\\r\\n  background:#ECECEC;\\r\\n  cursor: pointer;\\r\\n}\\r\\n\\r\\n.items:hover > .name{\\r\\n  margin-top: -70px;\\r\\n  transition: margin-top cubic-bezier(0, 1.63, 0.52, 0.95) 200ms;\\r\\n}\\r\\n\\r\\n#left, #right {\\r\\n  margin: 30px;\\r\\n}\\r\\n\\r\\n.name{\\r\\n  position: absolute;\\r\\n  width: 300px;\\r\\n  height: 80px;\\r\\n  background: #5e00b3d6;\\r\\n  font-family:'Quicksand', sans-serif;\\r\\n  color: #ffffff;\\r\\n  display: flex;\\r\\n  flex-direction: column;\\r\\n  cursor: pointer;\\r\\n  transition: margin-top ease-in-out 200ms;\\r\\n}\\r\\n\\r\\n.bookName, .authorName{\\r\\n  display: flex;\\r\\n  justify-content:center;\\r\\n  align-items:center;\\r\\n}\\r\\n\\r\\n.bookName{\\r\\n  height: 40px;\\r\\n  font-size: 1em;\\r\\n}\\r\\n\\r\\n.authorName{\\r\\n  font-family: 'Raleway', sans-serif;\\r\\n  font-size: 12px;\\r\\n  height: 30px;\\r\\n}\\r\\n\\r\\n#newBooksTitle{\\r\\n  font-size: 2em;\\r\\n  display: flex;\\r\\n  align-items:center;\\r\\n  justify-content: center;\\r\\n  font-family:'Bitter', sans-serif;\\r\\n  font-weight: 800;\\r\\n  color: #572a6a;\\r\\n  margin-bottom: 20px;\\r\\n}\\r\\n\\r\\n\\r\\n\"","module.exports = \"<div class=\\\"container\\\">\\n  <mat-card *ngIf=\\\"!resultArray\\\">No Results Were Found</mat-card>\\n  <ul>\\n    <li *ngFor=\\\"let book of books$\\\">\\n      <mat-card class=\\\"card\\\">\\n        <mat-card-header>\\n          <mat-card-title style=\\\"height: 30px;\\\"><b>{{ book.name }}</b></mat-card-title>\\n          <mat-card-subtitle>By {{ book.author }}</mat-card-subtitle>\\n        </mat-card-header>\\n        <img style=\\\"max-height: 300px\\\" mat-card-image src=\\\"{{ book.imageUrl }}\\\" alt=\\\"{{ book.name }}\\\">\\n        <mat-card-actions>\\n          <button routerLink=\\\"/books/book-details/{{book._id}}\\\" mat-button><b>VIEW BOOK</b></button>\\n        </mat-card-actions>\\n      </mat-card>\\n    </li>\\n  </ul>\\n  <div id=\\\"container1\\\" *ngIf=\\\"newBooks\\\">\\n    <div id=\\\"newBooksTitle\\\">New Arrivals</div>\\n    <div\\n      ng2-carouselamos\\n      class=\\\"slides-wrapper\\\"\\n      [items]=\\\"items\\\"\\n      [width]=\\\"960\\\"\\n      [$prev]=\\\"prev\\\"\\n      [$next]=\\\"next\\\"\\n      [$item]=\\\"item\\\"\\n    >\\n    </div>\\n\\n\\n    <ng-template #prev>\\n      <img style=\\\"background: #fff; border-radius: 50%; background-position: center center; cursor: pointer; \\\" src=\\\"../../../../assets/left-arrow.svg\\\" id=\\\"left\\\" />\\n    </ng-template>\\n    <ng-template #next>\\n      <img style=\\\"background: #fff; border-radius: 50%; background-position: center center;cursor: pointer;\\\"  src=\\\"../../../../assets/right-arrow.svg\\\" id=\\\"right\\\" />\\n    </ng-template>\\n    <ng-template #item let-item let-i=\\\"index\\\">\\n\\n      <div class=\\\"items\\\" routerLink=\\\"/books/book-details/{{item.id}}\\\">\\n        <img style=\\\"width: 300px; height: 400px; background-size: contain\\\" src=\\\"{{ item.imageUrl }}\\\">\\n        <div class=\\\"name\\\">\\n          <div class=\\\"bookName\\\">{{item.name}}</div>\\n          <div class=\\\"authorName\\\">by {{item.author}}</div>\\n        </div>\\n      </div>\\n\\n\\n    </ng-template>\\n  </div>\\n</div>\\n\"","import {Component, ElementRef, OnInit, ViewChild} from '@angular/core';\nimport {BookDataService} from \"../../../services/book-data.service\";\nimport { Observable } from \"rxjs/index\";\nimport {ActivatedRoute} from \"@angular/router\";\nimport {map} from \"rxjs/internal/operators\";\n\nimport {MatSnackBar} from '@angular/material';\nimport {HomeComponent} from \"../home.component\";\nimport {Ng2Carouselamos} from \"ng2-carouselamos/dist/components\";\n\n@Component({\n  selector: 'app-search-result',\n  templateUrl: './search-result.component.html',\n  styleUrls: ['./search-result.component.css']\n})\nexport class SearchResultComponent implements OnInit {\n\n  name$: Object;\n  books$:Object;\n  resultArray:boolean = true;\n  items: Array<any> = [];\n  newBooks: boolean = false;\n\n  //to remove the async nature of JS\n  getBooks(){\n    return this.bookDataService.getBooks(this.name$).pipe(map(books => {\n      this.books$ = books['book'];\n      if (this.books$ === undefined && this.name$ != undefined){\n        this.openSnackBar();\n        this.resultArray = false;\n      }\n    }));\n  }\n\n  openSnackBar() {\n    this.snackBar.open('No Results Found', 'Undo',{\n      duration: 2000\n    });\n  }\n\n  constructor(private bookDataService: BookDataService, private route: ActivatedRoute,\n              private snackBar: MatSnackBar) {\n    this.route.params.subscribe(params => this.name$ = params.bookName);\n\n    let bookLimit = {\n      limit: 10\n    };\n    this.bookDataService.getNewBooks(bookLimit).subscribe(books => {\n      if(books['success'] == true){\n        this.newBooks = true;\n        let booksArray = books['books'];\n        for (let i = 0; i < booksArray.length; i++){\n          this.items.push({\n            id: booksArray[i]._id,\n            imageUrl : booksArray[i].imageUrl,\n            name: booksArray[i].name,\n            author: booksArray[i].author,\n\n          });\n        }\n      }else{\n        this.newBooks =false;\n      }\n    });\n  }\n\n  ngOnInit() {\n    this.getBooks().subscribe(_ => {});\n  }\n\n}\n","module.exports = \".container{\\r\\n  width: 70%;\\r\\n  margin-left: calc((100vw - 70%)/2);\\r\\n  margin-top: 100px;\\r\\n  display: flex;\\r\\n  flex-direction: column;\\r\\n  align-items: center;\\r\\n}\\r\\n\\r\\n#title{\\r\\n  display: flex;\\r\\n  align-items: center;\\r\\n  justify-content: center;\\r\\n  font-family: 'Bitter', sans-serif;\\r\\n}\\r\\n\\r\\n#form {\\r\\n  width: 50%;\\r\\n  min-width: 250px;\\r\\n  display: flex;\\r\\n  flex-direction: column;\\r\\n  align-items: center;\\r\\n}\\r\\n\\r\\nform{\\r\\n  width: 100%;\\r\\n  margin-top: 10px;\\r\\n}\\r\\n\\r\\n.full-width {\\r\\n  width: 100%;\\r\\n  margin-top: 10px;\\r\\n}\\r\\n\\r\\n#login-btn{\\r\\n  height: 50px;\\r\\n  font-family: 'Quicksand', sans-serif;\\r\\n  font-size: 1em;\\r\\n}\\r\\n\\r\\n#registerLink{\\r\\n  font-family: 'Quicksand', sans-serif !important;\\r\\n  font-size: 1em !important;\\r\\n  margin-top: 20px;\\r\\n  cursor: pointer;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"container\\\">\\n  <div id=\\\"title\\\">\\n    <h1><span>Login</span></h1>\\n  </div>\\n  <div id=\\\"form\\\">\\n  <form (submit)=\\\"onLoginSubmit()\\\">\\n    <mat-form-field appearance=\\\"outline\\\" class=\\\"full-width\\\">\\n      <mat-label>Email</mat-label>\\n      <input matInput autocomplete=\\\"off\\\" placeholder=\\\"Email\\\" [formControl]=\\\"emailFormControl\\\"\\n             [errorStateMatcher]=\\\"matcher\\\">\\n      <mat-hint *ngIf=\\\"emailFormControl.value != ''\\\"></mat-hint>\\n      <mat-error *ngIf=\\\"emailFormControl.hasError('email') && !emailFormControl.hasError('required')\\\">\\n        Please enter a valid email address\\n      </mat-error>\\n      <mat-error *ngIf=\\\"emailFormControl.hasError('required')\\\">\\n        Email is <strong>required</strong>\\n      </mat-error>\\n    </mat-form-field>\\n    <br/>\\n    <mat-form-field appearance=\\\"outline\\\" class=\\\"full-width\\\">\\n      <mat-label>Password</mat-label>\\n      <input matInput placeholder=\\\"Enter your password\\\" [formControl]=\\\"passwordFormControl\\\" [type]=\\\"hide ? 'password' : 'text'\\\">\\n      <mat-error *ngIf=\\\"passwordFormControl.hasError('required')\\\"> Password is <strong>required</strong></mat-error>\\n      <mat-icon matSuffix (click)=\\\"hide = !hide\\\">{{hide ? 'visibility' : 'visibility_off'}}</mat-icon>\\n    </mat-form-field>\\n    <button class=\\\"full-width\\\" id=\\\"login-btn\\\" mat-raised-button color=\\\"primary\\\">Login</button>\\n  </form>\\n  <mat-chip-list  class=\\\"full-width\\\">\\n    <mat-chip [routerLink] = \\\"['/register']\\\" color=\\\"primary\\\" id=\\\"registerLink\\\">\\n      <p>Need an Account? <strong>Register</strong> Here</p>\\n    </mat-chip>\\n  </mat-chip-list>\\n</div>\\n</div>\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport {FormControl, FormGroupDirective, NgForm, Validators} from '@angular/forms';\nimport {ErrorStateMatcher} from '@angular/material/core';\nimport {AuthService} from \"../../services/auth.service\";\nimport {Router} from \"@angular/router\";\nimport {routerNgProbeToken} from \"@angular/router/src/router_module\";\nimport {MatSnackBar} from \"@angular/material\";\n\nexport class MyErrorStateMatcher implements ErrorStateMatcher {\n  isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\n    const isSubmitted = form && form.submitted;\n    console.log(control);\n    return !!(control && control.invalid && (control.dirty || control.touched || isSubmitted));\n  }\n}\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  hide = true;\n\n  constructor(\n    private authService: AuthService,\n    private router: Router,\n    private snackBar: MatSnackBar\n  ) { }\n\n  ngOnInit() {\n  }\n\n  passwordFormControl = new FormControl('', [\n    Validators.required,\n  ]);\n\n  emailFormControl = new FormControl('', [\n    Validators.required,\n    Validators.email,\n  ]);\n\n  matcher = new MyErrorStateMatcher();\n\n  onLoginSubmit(){\n    if(!this.emailFormControl.invalid){\n      const user = {\n        email: this.emailFormControl.value,\n        password: this.passwordFormControl.value\n      };\n      this.authService.authenticateUser(user).subscribe(data => {\n        if (data['success']){\n          this.authService.storeUserData(data['token'], data['user']);\n          if(data['user'].type == 'member'){\n            this.router.navigate(['/']);\n          }else if (data['user'].type == 'admin'){\n            this.router.navigate(['/adminHome']);\n          }\n        }else{\n          if (data['msg'] == 'User not found'){\n            this.snackBar.open('Invalid Credentials', 'Close',{\n              duration: 2000\n            });\n          }else{\n            this.snackBar.open('Wrong Password', 'Close',{\n              duration: 2000\n            });\n          }\n\n        }\n      });\n    }\n  }\n\n}\n","module.exports = \".container {\\r\\n  display: flex;\\r\\n  flex-direction: column;\\r\\n  position: absolute;\\r\\n  top: 0;\\r\\n  bottom: 0;\\r\\n  left: 0;\\r\\n  right: 0;\\r\\n}\\r\\n\\r\\n.toolbar {\\r\\n  position: fixed;\\r\\n  /* Make sure the toolbar will stay on top of the content as it scrolls past. */\\r\\n  z-index: 2;\\r\\n}\\r\\n\\r\\nh1.app-name {\\r\\n  font-family: 'Lobster', sans-serif;\\r\\n  margin-left: 15px;\\r\\n  font-size: 1.4em;\\r\\n}\\r\\n\\r\\n.logo{\\r\\n  font-size: 40px;\\r\\n  height: 30px;\\r\\n  width: 30px;\\r\\n}\\r\\n\\r\\n.nav-main-menu, .icon {\\r\\n  padding: 0 14px;\\r\\n  -webkit-user-select: none;\\r\\n  -moz-user-select: none;\\r\\n  -ms-user-select: none;\\r\\n  user-select: none;\\r\\n  cursor: pointer;\\r\\n  outline: 0;\\r\\n  border: none;\\r\\n  border-radius: 2px;\\r\\n  height: 40px;\\r\\n  display: flex;\\r\\n  align-items: center;\\r\\n}\\r\\n\\r\\n.nav-main-menu:hover, .icon:hover{\\r\\n  background-color: #2d3d96;\\r\\n}\\r\\n\\r\\n.spacer {\\r\\n  flex: 1 1 auto;\\r\\n}\\r\\n\\r\\n.nav-main-menu{\\r\\n  padding: 0 14px;\\r\\n  font-family: 'Montserrat', sans-serif;\\r\\n  font-weight: 400;\\r\\n  font-size: 16px;\\r\\n}\\r\\n\\r\\n.active{\\r\\n  border-bottom: 2px solid #fff;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"container\\\">\\n  <mat-toolbar color=\\\"primary\\\" class=\\\"toolbar\\\">\\n    <a><mat-icon class=\\\"logo\\\">local_library</mat-icon></a>\\n    <h1 class=\\\"app-name\\\">UCSC Library</h1>\\n    <span class=\\\"spacer\\\"></span>\\n    <span *ngIf=\\\"!authService.loggedIn()\\\" routerLinkActive = \\\"active\\\" [routerLinkActiveOptions] = \\\"{exact:true}\\\" [routerLink] = \\\"['/login']\\\" class=\\\"nav-main-menu\\\">Login</span>\\n    <span *ngIf=\\\"!authService.loggedIn()\\\" routerLinkActive = \\\"active\\\" [routerLinkActiveOptions] = \\\"{exact:true}\\\" [routerLink] = \\\"['/register']\\\" class=\\\"nav-main-menu\\\">Register</span>\\n    <mat-icon *ngIf=\\\"authService.adminLoggedIn()\\\" routerLinkActive = \\\"active\\\" [routerLinkActiveOptions] = \\\"{exact:true}\\\" [routerLink] = \\\"['/adminHome']\\\" matTooltip=\\\"Home\\\" class=\\\"icon\\\">home</mat-icon>\\n    <mat-icon *ngIf=\\\"authService.adminLoggedIn()\\\" routerLinkActive = \\\"active\\\" [routerLinkActiveOptions] = \\\"{exact:true}\\\" [routerLink] = \\\"['/requestedBooks']\\\" matTooltip=\\\"Requested Books\\\" class=\\\"icon\\\">notifications_active</mat-icon>\\n    <mat-icon *ngIf=\\\"authService.adminLoggedIn()\\\" routerLinkActive = \\\"active\\\" [routerLinkActiveOptions] = \\\"{exact:true}\\\" [routerLink] = \\\"['/reports']\\\" matTooltip=\\\"Create Reports\\\" class=\\\"icon\\\">description</mat-icon>\\n    <mat-icon *ngIf=\\\"authService.adminLoggedIn()\\\" routerLinkActive = \\\"active\\\" [routerLinkActiveOptions] = \\\"{exact:true}\\\" [routerLink] = \\\"['/addAdmin']\\\" matTooltip=\\\"Add Admin\\\" class=\\\"icon\\\">person_add</mat-icon>\\n    <mat-icon *ngIf=\\\"authService.adminLoggedIn()\\\" routerLinkActive = \\\"active\\\" [routerLinkActiveOptions] = \\\"{exact:true}\\\" [routerLink] = \\\"['/addBook']\\\" matTooltip=\\\"Add a Book\\\" class=\\\"icon\\\">note_add</mat-icon>\\n    <mat-icon *ngIf=\\\"authService.memberLoggedIn()\\\" routerLinkActive = \\\"active\\\" [routerLinkActiveOptions] = \\\"{exact:true}\\\" [routerLink] = \\\"['']\\\" matTooltip=\\\"Home\\\" class=\\\"icon\\\">home</mat-icon>\\n    <mat-icon *ngIf=\\\"authService.memberLoggedIn()\\\" routerLinkActive = \\\"active\\\" [routerLinkActiveOptions] = \\\"{exact:true}\\\" [routerLink] = \\\"['/requestBook']\\\" matTooltip=\\\"Request a Book\\\" class=\\\"icon\\\">screen_share</mat-icon>\\n    <mat-icon *ngIf=\\\"authService.loggedIn()\\\" routerLinkActive = \\\"active\\\" [routerLinkActiveOptions] = \\\"{exact:true}\\\" [routerLink] = \\\"['/profile']\\\" matTooltip=\\\"Profile\\\" class=\\\"icon\\\">account_circle</mat-icon>\\n    <mat-icon *ngIf=\\\"authService.memberLoggedIn()\\\" routerLinkActive = \\\"active\\\" [routerLinkActiveOptions] = \\\"{exact:true}\\\" [routerLink] = \\\"['/dashboard']\\\" matTooltip=\\\"Dashboard\\\" class=\\\"icon\\\">dashboard</mat-icon>\\n    <mat-icon *ngIf=\\\"authService.loggedIn()\\\" [routerLink] = \\\"['/login']\\\" (click)=\\\"onLogoutClick()\\\"  matTooltip=\\\"Logout\\\" class=\\\"icon\\\">exit_to_app</mat-icon>\\n  </mat-toolbar>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {AuthService} from \"../../services/auth.service\";\nimport {Router} from \"@angular/router\";\nimport {MatSnackBar} from \"@angular/material\";\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor(\n    private authService: AuthService,\n    private router: Router,\n    private snackBar: MatSnackBar\n    ) {\n  }\n\n  ngOnInit() {\n  }\n\n  onLogoutClick(){\n    this.authService.logout();\n    this.snackBar.open('You Logged Out', 'Close',{\n      duration: 2000\n    });\n    this.router.navigate(['/login']);\n  }\n\n}\n","module.exports = \".container{\\r\\n  width: 70%;\\r\\n  margin-left: calc((100vw - 70%)/2);\\r\\n  margin-top: 100px;\\r\\n}\\r\\n\\r\\n.left-section, .right-section{\\r\\n  float: left;\\r\\n}\\r\\n\\r\\n.left-section{\\r\\n  width: 30%;\\r\\n}\\r\\n\\r\\n.right-section{\\r\\n  width: 68%;\\r\\n  margin-left: 2%;\\r\\n}\\r\\n\\r\\n.profile-image{\\r\\n  width: 100%;\\r\\n  box-sizing: border-box;\\r\\n}\\r\\n\\r\\nimg{\\r\\n  width: 100%;\\r\\n}\\r\\n\\r\\n.invite{\\r\\n  font-size: 1.5em;\\r\\n  font-family: 'Quicksand', sans-serif;\\r\\n  font-weight: 500;\\r\\n  margin-bottom: 10px;\\r\\n}\\r\\n\\r\\n.properties{\\r\\n  margin-top: 10px;\\r\\n  width: 100%;\\r\\n}\\r\\n\\r\\n.label{\\r\\n  color: #9e0099 !important;\\r\\n}\\r\\n\\r\\ninput{\\r\\n  color: #303030 !important;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"left-section\\\">\\n    <div class=\\\"profile-image\\\">\\n      <img src=\\\"http://www.newsshare.in/wp-content/uploads/2017/04/Miniclip-8-Ball-Pool-Avatar-16.png\\\" alt=\\\"\\\">\\n    </div>\\n  </div>\\n  <form (submit)=\\\"updateProfile()\\\">\\n    <div class=\\\"right-section\\\" *ngIf=\\\"user\\\">\\n      <mat-card class=\\\"invite\\\">Let's Edit Your Profile</mat-card>\\n      <mat-form-field appearance=\\\"outline\\\" class=\\\"properties\\\">\\n        <mat-label>First Name</mat-label>\\n        <input matInput autocomplete=\\\"off\\\" placeholder=\\\"First Name\\\" [formControl]=\\\"firstNameFormControl\\\"\\n               [errorStateMatcher]=\\\"matcher\\\">\\n        <mat-hint *ngIf=\\\"firstNameFormControl.value != ''\\\"></mat-hint>\\n        <mat-error *ngIf=\\\"firstNameFormControl.hasError('required')\\\">\\n          First name is <strong>required</strong>\\n        </mat-error>\\n      </mat-form-field>\\n      <mat-form-field appearance=\\\"outline\\\" class=\\\"properties\\\">\\n        <input matInput autocomplete=\\\"off\\\" placeholder=\\\"Last Name\\\" [formControl]=\\\"lastNameFormControl\\\"\\n               [errorStateMatcher]=\\\"matcher\\\">\\n        <mat-hint *ngIf=\\\"lastNameFormControl.value != ''\\\"></mat-hint>\\n        <mat-error *ngIf=\\\"lastNameFormControl.hasError('required')\\\">\\n          Last name is <strong>required</strong>\\n        </mat-error>\\n      </mat-form-field>\\n      <mat-form-field *ngIf=\\\"authService.memberLoggedIn()\\\" appearance=\\\"outline\\\" class=\\\"properties\\\">\\n        <mat-label class=\\\"label\\\">Index Number</mat-label>\\n        <input matInput disabled value=\\\"{{user.indexNumber}}\\\">\\n      </mat-form-field>\\n      <mat-form-field appearance=\\\"outline\\\" class=\\\"properties\\\">\\n        <mat-label class=\\\"label\\\">Email</mat-label>\\n        <input matInput disabled value=\\\"{{user.email}}\\\">\\n      </mat-form-field>\\n      <button mat-raised-button color=\\\"primary\\\"> Update </button>\\n    </div>\\n  </form>\\n</div>\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport {AuthService} from \"../../../services/auth.service\";\nimport {ErrorStateMatcher, MatSnackBar} from \"@angular/material\";\nimport {FormControl, FormGroupDirective, NgForm, Validators} from \"@angular/forms\";\nimport {Router} from \"@angular/router\";\n\nexport class MyErrorStateMatcher implements ErrorStateMatcher {\n  isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\n    const isSubmitted = form && form.submitted;\n    return !!(control && control.invalid && (control.dirty || control.touched || isSubmitted));\n  }\n}\n\n@Component({\n  selector: 'app-edit',\n  templateUrl: './edit.component.html',\n  styleUrls: ['./edit.component.css']\n})\nexport class EditComponent implements OnInit {\n\n  user: Object;\n\n  constructor(private authService: AuthService, private snackBar: MatSnackBar, private router: Router) { }\n\n  ngOnInit() {\n    this.authService.getProfile().subscribe(profile => {\n        this.user = profile['user'];\n        this.firstNameFormControl.setValue(this.user['firstName']);\n        this.lastNameFormControl.setValue(this.user['lastName']);\n      },\n      error => {\n        console.log(error);\n        return false;\n      });\n  }\n\n  firstNameFormControl = new FormControl('', [\n    Validators.required,\n  ]);\n\n  lastNameFormControl = new FormControl('', [\n    Validators.required,\n  ]);\n\n  matcher = new MyErrorStateMatcher();\n\n  updateProfile(){\n    if(!this.firstNameFormControl.invalid && !this.lastNameFormControl.invalid){\n      const user = {\n        firstName:  this.firstNameFormControl.value,\n        lastName: this.lastNameFormControl.value,\n        email: this.user['email']\n      };\n      this.authService.updateUser(user).subscribe( result => {\n        if (result['success']){\n          this.snackBar.open(\"Updated Successfully\",\"Close\",{\n            duration: 3000\n          });\n          this.router.navigate(['/profile']);\n        }\n      });\n    }\n  }\n\n}\n","module.exports = \".container{\\r\\n  width: 70%;\\r\\n  margin-left: calc((100vw - 70%)/2);\\r\\n  margin-top: 100px;\\r\\n}\\r\\n\\r\\n.left-section, .right-section{\\r\\n  float: left;\\r\\n}\\r\\n\\r\\n.left-section{\\r\\n  width: 30%;\\r\\n}\\r\\n\\r\\n.right-section{\\r\\n  width: 68%;\\r\\n  margin-left: 2%;\\r\\n}\\r\\n\\r\\n.profile-image{\\r\\n  width: 100%;\\r\\n  box-sizing: border-box;\\r\\n}\\r\\n\\r\\nimg{\\r\\n  width: 100%;\\r\\n}\\r\\n\\r\\n.invite{\\r\\n  font-size: 1.5em;\\r\\n  font-family: 'Quicksand', sans-serif;\\r\\n  font-weight: 500;\\r\\n  margin-bottom: 10px;\\r\\n}\\r\\n\\r\\n.properties{\\r\\n  margin-top: 10px;\\r\\n  width: 100%;\\r\\n}\\r\\n\\r\\n.label{\\r\\n  color: #9e0099 !important;\\r\\n}\\r\\n\\r\\ninput{\\r\\n  color: #303030 !important;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"left-section\\\">\\n    <div class=\\\"profile-image\\\">\\n      <img src=\\\"http://www.newsshare.in/wp-content/uploads/2017/04/Miniclip-8-Ball-Pool-Avatar-16.png\\\" alt=\\\"\\\">\\n    </div>\\n  </div>\\n  <div class=\\\"right-section\\\" *ngIf=\\\"user\\\">\\n    <mat-card class=\\\"invite\\\">Hello, {{user.firstName}} {{user.lastName}}</mat-card>\\n    <mat-form-field appearance=\\\"outline\\\" class=\\\"properties\\\">\\n      <mat-label class=\\\"label\\\">First Name</mat-label>\\n      <input matInput disabled value=\\\"{{user.firstName}}\\\">\\n    </mat-form-field>\\n    <mat-form-field appearance=\\\"outline\\\" class=\\\"properties\\\">\\n      <mat-label class=\\\"label\\\">Last Name</mat-label>\\n      <input matInput disabled value=\\\"{{user.lastName}}\\\">\\n    </mat-form-field>\\n    <mat-form-field *ngIf=\\\"authService.memberLoggedIn()\\\" appearance=\\\"outline\\\" class=\\\"properties\\\">\\n      <mat-label class=\\\"label\\\">Index Number</mat-label>\\n      <input matInput disabled value=\\\"{{user.indexNumber}}\\\">\\n    </mat-form-field>\\n    <mat-form-field appearance=\\\"outline\\\" class=\\\"properties\\\">\\n      <mat-label class=\\\"label\\\">Email</mat-label>\\n      <input matInput disabled value=\\\"{{user.email}}\\\">\\n    </mat-form-field>\\n    <button mat-raised-button color=\\\"primary\\\" (click)=\\\"editProfile(user.email)\\\" >Edit Profile</button>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {AuthService} from \"../../services/auth.service\";\nimport {Router} from \"@angular/router\";\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n\n  user: Object;\n\n  constructor(private authService: AuthService,private router: Router) { }\n\n  ngOnInit() {\n    this.authService.getProfile().subscribe(profile => {\n      this.user = profile['user'];\n    },\n      error => {\n      console.log(error);\n      return false;\n      });\n  }\n\n  editProfile(){\n    this.router.navigate(['/profile/edit']);\n  }\n\n}\n","module.exports = \".container{\\r\\n  width: 70%;\\r\\n  margin-left: calc((100vw - 70%)/2);\\r\\n  margin-top: 100px;\\r\\n  display: flex;\\r\\n  flex-direction: column;\\r\\n  align-items: center;\\r\\n}\\r\\n\\r\\n#title{\\r\\n  display: flex;\\r\\n  align-items: center;\\r\\n  justify-content: center;\\r\\n  font-family: 'Bitter', sans-serif;\\r\\n}\\r\\n\\r\\n#form {\\r\\n  width: 70%;\\r\\n  min-width: 250px;\\r\\n  display: flex;\\r\\n  flex-direction: column;\\r\\n  align-items: center;\\r\\n}\\r\\n\\r\\nform{\\r\\n  width: 100%;\\r\\n  margin-top: 10px;\\r\\n}\\r\\n\\r\\n.full-width {\\r\\n  width: 100%;\\r\\n  margin-top: 10px;\\r\\n}\\r\\n\\r\\n.left-section, .right-section{\\r\\n  width: 46%;\\r\\n  float: left;\\r\\n  padding: 2%;\\r\\n}\\r\\n\\r\\n#register-btn{\\r\\n  margin: 0 2%;\\r\\n  width: 96%;\\r\\n  height: 50px;\\r\\n  font-family: 'Quicksand', sans-serif;\\r\\n  font-size: 1em;\\r\\n}\\r\\n\\r\\n#loginLink{\\r\\n  font-family: 'Quicksand', sans-serif !important;\\r\\n  font-size: 1em !important;\\r\\n  margin: 10px 2%;\\r\\n  cursor: pointer;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"container\\\">\\n  <div id=\\\"title\\\">\\n    <h1><span>Register</span></h1>\\n  </div>\\n  <div id=\\\"form\\\">\\n    <form (submit)=\\\"onRegisterSubmit()\\\">\\n      <div class=\\\"left-section\\\">\\n        <mat-form-field appearance=\\\"outline\\\" class=\\\"full-width\\\">\\n          <mat-label>First Name</mat-label>\\n          <input matInput autocomplete=\\\"off\\\" placeholder=\\\"First Name\\\" [formControl]=\\\"firstNameFormControl\\\"\\n                 [errorStateMatcher]=\\\"matcher\\\">\\n          <mat-hint *ngIf=\\\"firstNameFormControl.value != ''\\\"></mat-hint>\\n          <mat-error *ngIf=\\\"firstNameFormControl.hasError('required')\\\">\\n            First name is <strong>required</strong>\\n          </mat-error>\\n        </mat-form-field>\\n        <mat-form-field appearance=\\\"outline\\\" class=\\\"full-width\\\">\\n          <mat-label>Last Name</mat-label>\\n          <input matInput autocomplete=\\\"off\\\" placeholder=\\\"Last Name\\\" [formControl]=\\\"lastNameFormControl\\\"\\n                 [errorStateMatcher]=\\\"matcher\\\">\\n          <mat-hint *ngIf=\\\"lastNameFormControl.value != ''\\\"></mat-hint>\\n          <mat-error *ngIf=\\\"lastNameFormControl.hasError('required')\\\">\\n            Last name is <strong>required</strong>\\n          </mat-error>\\n        </mat-form-field>\\n        <mat-form-field appearance=\\\"outline\\\" class=\\\"full-width\\\">\\n          <mat-label>Index Number</mat-label>\\n          <input matInput autocomplete=\\\"off\\\" maxlength=\\\"8\\\" placeholder=\\\"Index Number\\\" [formControl]=\\\"indexFormControl\\\"\\n                 [errorStateMatcher]=\\\"matcher\\\">\\n          <mat-hint *ngIf=\\\"indexFormControl.value != ''\\\"></mat-hint>\\n          <mat-error *ngIf=\\\"indexFormControl.hasError('required')\\\">\\n            Index number is <strong>required</strong>\\n          </mat-error>\\n          <mat-error *ngIf=\\\"indexFormControl.hasError('pattern')\\\">\\n            Letters are <strong>not allowed</strong>\\n          </mat-error>\\n          <mat-error *ngIf=\\\"indexFormControl.hasError('minlength') && !indexFormControl.hasError('pattern')\\\">\\n            Index number is <strong>invalid</strong>\\n          </mat-error>\\n        </mat-form-field>\\n      </div>\\n      <div class=\\\"right-section\\\">\\n        <mat-form-field appearance=\\\"outline\\\" class=\\\"full-width\\\">\\n          <mat-label>Email</mat-label>\\n          <input matInput autocomplete=\\\"off\\\" placeholder=\\\"Email\\\" [formControl]=\\\"emailFormControl\\\"\\n                 [errorStateMatcher]=\\\"matcher\\\">\\n          <mat-hint *ngIf=\\\"emailFormControl.value != ''\\\"></mat-hint>\\n          <mat-error *ngIf=\\\"emailFormControl.hasError('email') && !emailFormControl.hasError('required')\\\">\\n            Please enter a valid email address\\n          </mat-error>\\n          <mat-error *ngIf=\\\"emailFormControl.hasError('required')\\\">\\n            Email is <strong>required</strong>\\n          </mat-error>\\n        </mat-form-field>\\n        <mat-form-field appearance=\\\"outline\\\" class=\\\"full-width\\\">\\n          <mat-label>Password</mat-label>\\n          <input matInput placeholder=\\\"Enter your password\\\" [formControl]=\\\"passwordFormControl\\\" [type]=\\\"hide ? 'password' : 'text'\\\">\\n          <mat-error *ngIf=\\\"passwordFormControl.hasError('required')\\\"> Password is <strong>required</strong></mat-error>\\n          <mat-icon matSuffix (click)=\\\"hide = !hide\\\">{{hide ? 'visibility' : 'visibility_off'}}</mat-icon>\\n        </mat-form-field>\\n        <mat-form-field appearance=\\\"outline\\\" class=\\\"full-width\\\">\\n          <mat-label>Re-enter Password</mat-label>\\n          <input matInput placeholder=\\\"Enter your password\\\" [formControl]=\\\"rePasswordFormControl\\\" [type]=\\\"rehide ? 'password' : 'text'\\\">\\n          <mat-error *ngIf=\\\"rePasswordFormControl.hasError('required')\\\"> Re-enter the password</mat-error>\\n          <mat-icon matSuffix (click)=\\\"rehide = !rehide\\\">{{rehide ? 'visibility' : 'visibility_off'}}</mat-icon>\\n        </mat-form-field>\\n      </div>\\n      <button class=\\\"full-width\\\" id=\\\"register-btn\\\" mat-raised-button color=\\\"primary\\\">Register</button>\\n    </form>\\n    <mat-chip-list  class=\\\"full-width\\\">\\n      <mat-chip [routerLink] = \\\"['/login']\\\" color=\\\"primary\\\" id=\\\"loginLink\\\">\\n        <p>Already have an Account? <strong>Login</strong> Here</p>\\n      </mat-chip>\\n    </mat-chip-list>\\n  </div>\\n\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {FormControl, FormGroupDirective, NgForm, Validators} from '@angular/forms';\nimport {ErrorStateMatcher} from '@angular/material/core';\nimport {MatSnackBar} from \"@angular/material\";\nimport {AuthService} from \"../../services/auth.service\";\nimport {Router} from \"@angular/router\";\n\nexport class MyErrorStateMatcher implements ErrorStateMatcher {\n  isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\n    const isSubmitted = form && form.submitted;\n    return !!(control && control.invalid && (control.dirty || control.touched || isSubmitted));\n  }\n}\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n\n  hide = true;\n  rehide = true;\n\n  constructor(\n    private snackBar: MatSnackBar,\n    private authService: AuthService,\n    private router: Router\n  ) { }\n\n  ngOnInit() {\n  }\n\n  firstNameFormControl = new FormControl('', [\n    Validators.required,\n  ]);\n\n  lastNameFormControl = new FormControl('', [\n    Validators.required,\n  ]);\n\n  indexFormControl = new FormControl('', [\n    Validators.required,\n    Validators.pattern(/^-?(0|[1-9]\\d*)?$/),\n    Validators.minLength(8)\n  ]);\n\n  emailFormControl = new FormControl('', [\n    Validators.required,\n    Validators.email,\n  ]);\n\n  passwordFormControl = new FormControl('', [\n    Validators.required,\n  ]);\n\n  rePasswordFormControl = new FormControl('', [\n    Validators.required,\n  ]);\n\n  matcher = new MyErrorStateMatcher();\n\n  onRegisterSubmit(){\n    if(!this.firstNameFormControl.invalid && !this.lastNameFormControl.invalid && !this.indexFormControl.invalid ||\n      !this.emailFormControl.invalid && !this.passwordFormControl.invalid && !this.rePasswordFormControl) {\n      if (this.passwordFormControl.value !== this.rePasswordFormControl.value){\n        this.snackBar.open('Passwords Does Not Match', 'Close',{\n          duration: 2000\n        });\n      }else{\n        const user = {\n          firstName:  this.firstNameFormControl.value,\n          lastName: this.lastNameFormControl.value,\n          indexNumber: this.indexFormControl.value,\n          email: this.emailFormControl.value,\n          password: this.passwordFormControl.value\n        };\n\n        this.authService.checkUserAvailability(user).subscribe( data => {\n          if (data['success']){\n            this.authService.registerUser(user).subscribe(data => {\n              if(data['success']){\n                this.snackBar.open(\"Registration Successful, You Can Login Now\", \"Close\", {\n                  duration: 3000\n                });\n                this.router.navigate(['/login']);\n              }\n            });\n          }else{\n            this.snackBar.open(\"You Are Already Registered, Please Login\", \"Close\", {\n              duration: 3000\n            });\n          }\n          });\n\n      }\n    }\n  }\n\n}\n","module.exports = \".container{\\r\\n  margin-top: 100px;\\r\\n  width: 70%;\\r\\n  margin-left: calc((100vw - 70%)/2);\\r\\n  font-family: 'Raleway', sans-serif;\\r\\n}\\r\\n\\r\\n.content{\\r\\n  margin-top: 20px;\\r\\n}\\r\\n\\r\\ntable {\\r\\n  width: 100%;\\r\\n}\\r\\n\\r\\n.mat-form-field {\\r\\n  font-size: 14px;\\r\\n  width: 100%;\\r\\n}\\r\\n\\r\\n.loading-shade {\\r\\n  position: absolute;\\r\\n  top: 0;\\r\\n  left: 0;\\r\\n  bottom: 56px;\\r\\n  right: 0;\\r\\n  background: rgba(0, 0, 0, 0.15);\\r\\n  z-index: 1;\\r\\n  display: flex;\\r\\n  align-items: center;\\r\\n  justify-content: center;\\r\\n}\\r\\n\\r\\ntable {\\r\\n  overflow: auto;\\r\\n}\\r\\n\\r\\ntd, th {\\r\\n  overflow: hidden;\\r\\n  word-wrap: break-word;\\r\\n}\\r\\n\\r\\n.mat-footer-cell{\\r\\n  z-index: 1 !important;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"content\\\">\\n    <mat-toolbar>Fines Report of {{newSelected}}</mat-toolbar>\\n    <mat-form-field style=\\\"width: 200px; margin-left: 15px\\\">\\n      <mat-select [(value)]=\\\"selected\\\">\\n        <mat-option value=\\\"Today\\\">Today</mat-option>\\n        <mat-option value=\\\"Last 7 Days\\\">Last 7 Days</mat-option>\\n        <mat-option value=\\\"Last 30 Days\\\">Last 30 Days</mat-option>\\n        <mat-option value=\\\"Last Year\\\">Last Year</mat-option>\\n        <mat-option value=\\\"All Times\\\">All</mat-option>\\n      </mat-select>\\n    </mat-form-field>\\n    <button (click)=\\\"dropDownFilter()\\\" style=\\\"margin-left: 20px\\\" mat-raised-button color=\\\"primary\\\">Filter</button>\\n    <button (click)=\\\"downloadFinesPdf()\\\" style=\\\"margin-left: 20px; margin-right: 10px; float: right \\\" mat-raised-button color=\\\"primary\\\">Download This As PDF</button>\\n    <div class=\\\"loading-shade\\\"\\n         *ngIf=\\\"isLoadingResults\\\">\\n      <mat-spinner *ngIf=\\\"isLoadingResults\\\"></mat-spinner>\\n    </div>\\n    <div class=\\\"mat-elevation-z8\\\">\\n      <table mat-table [dataSource]=\\\"dataSourceFine\\\" matSort>\\n\\n        <ng-container matColumnDef=\\\"Student Index\\\" cdkColumnDef=\\\"indexNumber\\\">\\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> Index Number </th>\\n          <td mat-cell *matCellDef=\\\"let row\\\"> {{row.indexNumber}} </td>\\n          <td mat-footer-cell *matFooterCellDef>Total</td>\\n        </ng-container>\\n\\n        <ng-container matColumnDef=\\\"Book Name\\\" cdkColumnDef=\\\"bookName\\\">\\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> Book Name </th>\\n          <td mat-cell *matCellDef=\\\"let row\\\"> {{row.bookName}} </td>\\n          <td mat-footer-cell *matFooterCellDef></td>\\n        </ng-container>\\n\\n        <ng-container matColumnDef=\\\"Date Paid\\\" cdkColumnDef=\\\"datePaid\\\">\\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> Date Paid  </th>\\n          <td mat-cell *matCellDef=\\\"let row\\\"> {{row.datePaid}} </td>\\n          <td mat-footer-cell *matFooterCellDef></td>\\n        </ng-container>\\n\\n        <ng-container matColumnDef=\\\"Amount\\\" cdkColumnDef=\\\"amount\\\">\\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> Amount (LKR)</th>\\n          <td mat-cell *matCellDef=\\\"let row\\\"> {{row.amount}} </td>\\n          <td mat-footer-cell *matFooterCellDef> {{totalFine.toFixed(2)}} </td>\\n        </ng-container>\\n\\n        <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n        <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n        <tr mat-footer-row style=\\\"font-weight: bold;\\\" *matFooterRowDef=\\\"displayedColumns; sticky: true\\\"></tr>\\n      </table>\\n\\n      <mat-paginator #paginator [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\" showFirstLastButtons></mat-paginator>\\n    </div>\\n  </div>\\n  <div class=\\\"content\\\">\\n    <mat-toolbar>Books Report of {{newSelectedBook}}</mat-toolbar>\\n    <mat-form-field style=\\\"width: 200px; margin-left: 15px\\\">\\n      <mat-select [(value)]=\\\"selectedBook\\\">\\n        <mat-option value=\\\"Today\\\">Today</mat-option>\\n        <mat-option value=\\\"Last 7 Days\\\">Last 7 Days</mat-option>\\n        <mat-option value=\\\"Last 30 Days\\\">Last 30 Days</mat-option>\\n        <mat-option value=\\\"Last Year\\\">Last Year</mat-option>\\n        <mat-option value=\\\"All Times\\\">All</mat-option>\\n      </mat-select>\\n    </mat-form-field>\\n    <button (click)=\\\"dropDownFilterBook()\\\" style=\\\"margin-left: 20px\\\" mat-raised-button color=\\\"primary\\\">Filter</button>\\n    <button (click)=\\\"downloadBooksPdf()\\\" style=\\\"margin-left: 20px; margin-right: 10px; float: right \\\" mat-raised-button color=\\\"primary\\\">Download This As PDF</button>\\n    <div class=\\\"loading-shade\\\"\\n         *ngIf=\\\"isLoadingResultsBook\\\">\\n      <mat-spinner *ngIf=\\\"isLoadingResultsBook\\\"></mat-spinner>\\n    </div>\\n    <div class=\\\"mat-elevation-z8\\\">\\n      <table mat-table [dataSource]=\\\"dataSourceBook\\\" matSort>\\n\\n        <ng-container matColumnDef=\\\"Book Name\\\" cdkColumnDef=\\\"bookName\\\">\\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> Book Name </th>\\n          <td mat-cell *matCellDef=\\\"let row\\\"> {{row.bookName}} </td>\\n          <td mat-footer-cell *matFooterCellDef>Total Books</td>\\n        </ng-container>\\n\\n        <ng-container matColumnDef=\\\"Author\\\" cdkColumnDef=\\\"author\\\">\\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> Author </th>\\n          <td mat-cell *matCellDef=\\\"let row\\\"> {{row.author}} </td>\\n          <td mat-footer-cell *matFooterCellDef></td>\\n        </ng-container>\\n\\n        <ng-container matColumnDef=\\\"Publisher\\\" cdkColumnDef=\\\"publisher\\\">\\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> Publisher </th>\\n          <td mat-cell *matCellDef=\\\"let row\\\"> {{row.publisher}} </td>\\n          <td mat-footer-cell *matFooterCellDef></td>\\n        </ng-container>\\n\\n        <ng-container matColumnDef=\\\"Added Date\\\" cdkColumnDef=\\\"addedDate\\\">\\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> Added On </th>\\n          <td mat-cell *matCellDef=\\\"let row\\\"> {{row.dateAdded}} </td>\\n          <td mat-footer-cell *matFooterCellDef></td>\\n        </ng-container>\\n\\n        <ng-container matColumnDef=\\\"Copies\\\" cdkColumnDef=\\\"copies\\\">\\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> Copies</th>\\n          <td mat-cell *matCellDef=\\\"let row\\\"> {{row.copies}} </td>\\n          <td mat-footer-cell *matFooterCellDef> {{totalBooks}} </td>\\n        </ng-container>\\n\\n        <tr mat-header-row *matHeaderRowDef=\\\"displayedColumnsBook\\\"></tr>\\n        <tr mat-row *matRowDef=\\\"let row; columns: displayedColumnsBook;\\\"></tr>\\n        <tr mat-footer-row style=\\\"font-weight: bold\\\" *matFooterRowDef=\\\"displayedColumnsBook; sticky: true\\\"></tr>\\n      </table>\\n\\n      <mat-paginator #paginatorBook [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\" showFirstLastButtons></mat-paginator>\\n    </div>\\n  </div>\\n</div>\\n\\n\"","import {Component, OnInit, ViewChild} from '@angular/core';\nimport {MatPaginator, MatSort, MatTableDataSource} from \"@angular/material\";\nimport {AdminService} from \"../../services/admin.service\";\nimport {BookDataService} from \"../../services/book-data.service\";\nimport * as jsPDF from 'jspdf';\nimport 'jspdf-autotable';\n\n\n@Component({\n  selector: 'app-report',\n  templateUrl: './report.component.html',\n  styleUrls: ['./report.component.css']\n})\nexport class ReportComponent implements OnInit {\n\n  displayedColumns = ['Student Index', 'Book Name', 'Date Paid', 'Amount'];\n  displayedColumnsBook = ['Book Name', 'Author', 'Publisher', 'Added Date', 'Copies'];\n  dataSourceFine: MatTableDataSource<FineData>;\n  dataSourceBook: MatTableDataSource<BookData>;\n\n  @ViewChild('paginator') paginator:MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n  @ViewChild('paginatorBook') paginatorBook:MatPaginator;\n  @ViewChild(MatSort) sortBook: MatSort;\n\n  finesSet: FineData [];\n  booksSet: BookData [];\n\n  isLoadingResults = true;\n  isLoadingResultsBook = true;\n\n  selected = 'Last 30 Days';\n  newSelected = 'Last 30 Days';\n  totalFine = 0;\n\n  selectedBook = 'Last 30 Days';\n  newSelectedBook = 'Last 30 Days';\n  totalBooks = 0;\n\n  constructor(private adminService: AdminService, private bookDataService: BookDataService) {  }\n\n  ngOnInit() {\n    this.prepareFineTable(Date.now() - 2592000000,  Date.now());\n    this.prepareBookTable(Date.now() - 2592000000,  Date.now());\n  }\n\n  prepareFineTable(filter, today){\n    this.finesSet = [];\n    this.totalFine = 0;\n    this.adminService.getFines(filter,today).subscribe(fineData => {\n      fineData['fines'].forEach(item => {\n\n        let newFine :FineData = {\n          indexNumber : item['indexNumber'],\n          bookName: item['bookName'],\n          datePaid: new Date(Number(item['datePaid'])).toLocaleString(),\n          amount: item['amount']\n        };\n        this.finesSet.push(newFine);\n        this.totalFine+=item['amount'];\n      });\n      this.isLoadingResults = false;\n      this.dataSourceFine = new MatTableDataSource(this.finesSet);\n      this.dataSourceFine.paginator = this.paginator;\n      this.dataSourceFine.sort = this.sort;\n\n    });\n  }\n\n  prepareBookTable(filter, today){\n    this.booksSet = [];\n    this.totalBooks = 0;\n    this.bookDataService.getBooksFilter(filter,today).subscribe(bookData => {\n      bookData['books'].forEach(item => {\n\n        let newBook :BookData = {\n          bookName : item['name'],\n          author: item['author'],\n          publisher: item['publisher'],\n          dateAdded: new Date(Number(item['from'])).toLocaleString(),\n          copies: item['copies']\n        };\n        this.booksSet.push(newBook);\n        this.totalBooks+=item['copies'];\n      });\n      this.isLoadingResultsBook = false;\n      this.dataSourceBook = new MatTableDataSource(this.booksSet);\n      this.dataSourceBook.paginator = this.paginatorBook;\n      this.dataSourceBook.sort = this.sortBook;\n\n    });\n  }\n\n  dropDownFilter(){\n    this.newSelected = this.selected;\n    if (this.selected == 'Today'){\n      let theDay = new Date(Date.now());\n      let todayMilliseconds = new Date(theDay.getFullYear(),theDay.getMonth(),theDay.getDate()).getTime();\n      this.prepareFineTable(todayMilliseconds, Date.now());\n    }else if(this.selected == 'Last 7 Days'){\n      this.prepareFineTable(Date.now() - 604800000, Date.now());\n    }else if (this.selected == 'Last 30 Days'){\n      this.prepareFineTable(Date.now() - 2592000000, Date.now());\n    }else if (this.selected == 'Last Year'){\n      this.prepareFineTable(Date.now() - 31536000000, Date.now());\n    }else if (this.selected == 'All Times'){\n      this.prepareFineTable(null, Date.now);\n    }\n  }\n\n  dropDownFilterBook(){\n    this.newSelectedBook = this.selectedBook;\n    if (this.selectedBook == 'Today'){\n      let theDay = new Date(Date.now());\n      let todayMilliseconds = new Date(theDay.getFullYear(),theDay.getMonth(),theDay.getDate()).getTime();\n      this.prepareBookTable(todayMilliseconds, Date.now());\n    }else if(this.selectedBook == 'Last 7 Days'){\n      this.prepareBookTable(Date.now() - 604800000, Date.now());\n    }else if (this.selectedBook == 'Last 30 Days'){\n      this.prepareBookTable(Date.now() - 2592000000, Date.now());\n    }else if (this.selectedBook == 'Last Year'){\n      this.prepareBookTable(Date.now() - 31536000000, Date.now());\n    }else if (this.selectedBook == 'All Times'){\n      this.prepareBookTable(null, Date.now);\n    }\n  }\n\n  downloadFinesPdf(){\n    let columns = [\n      {title : \"Index Number\",dataKey:\"indexNumber\"},\n      {title : \"Book Name\",dataKey:\"bookName\"},\n      {title : \"Paid Date\",dataKey:\"datePaid\"},\n      {title : \"Amount (LKR)\",dataKey:\"amount\"}\n      ];\n    let rows = this.finesSet;\n    let total : FineData = {\n      indexNumber : \"Total\",\n      bookName: '',\n      datePaid: '',\n      amount: Number(this.totalFine.toFixed(2))\n    };\n    rows.push(total);\n\n    let doc = new jsPDF('p', 'pt');\n    doc.text(\"Report Of Fines Formongo \" + this.selectedBook, 40, 30);\n    doc.autoTable(columns, rows);\n    doc.save('fines.pdf');\n\n  }\n\n  downloadBooksPdf(){\n    let columns = [\n      {title : \"Book Name\",dataKey:\"bookName\"},\n      {title : \"Author\",dataKey:\"author\"},\n      {title : \"Publisher\",dataKey:\"publisher\"},\n      {title : \"Added On\",dataKey:\"dateAdded\"},\n      {title : \"Copies\",dataKey:\"copies\"}\n    ];\n    let rows = this.booksSet;\n    let total : BookData = {\n      bookName : \"Total\",\n      author: '',\n      publisher: '',\n      dateAdded: '',\n      copies: this.totalBooks\n    };\n    rows.push(total);\n\n    let doc = new jsPDF('p', 'pt');\n    doc.text(\"Report Of Books For \" + this.selectedBook, 40, 30);\n    doc.autoTable(columns, rows);\n    doc.save('books.pdf');\n\n  }\n}\n\n\nexport interface FineData {\n  indexNumber: any,\n  bookName: string,\n  datePaid: string,\n  amount: number\n}\n\nexport interface BookData{\n  bookName: string,\n  author: string,\n  publisher: string,\n  dateAdded: string,\n  copies: number\n}\n","module.exports = \".container{\\r\\n  width: 70%;\\r\\n  margin-left: calc((100vw - 70%)/2);\\r\\n  margin-top: 100px;\\r\\n  display: flex;\\r\\n  flex-direction: column;\\r\\n  align-items: center;\\r\\n}\\r\\n\\r\\n#title{\\r\\n  display: flex;\\r\\n  align-items: center;\\r\\n  justify-content: center;\\r\\n  font-family: 'Bitter', sans-serif;\\r\\n}\\r\\n\\r\\n#form {\\r\\n  width: 70%;\\r\\n  min-width: 250px;\\r\\n  display: flex;\\r\\n  flex-direction: column;\\r\\n  align-items: center;\\r\\n}\\r\\n\\r\\nform{\\r\\n  width: 100%;\\r\\n  margin-top: 10px;\\r\\n}\\r\\n\\r\\n.full-width {\\r\\n  width: 100%;\\r\\n  margin-top: 10px;\\r\\n}\\r\\n\\r\\n.left-section, .right-section{\\r\\n  width: 46%;\\r\\n  float: left;\\r\\n  padding: 2%;\\r\\n}\\r\\n\\r\\n#submit-btn{\\r\\n  margin: 0 2%;\\r\\n  width: 96%;\\r\\n  height: 50px;\\r\\n  font-family: 'Quicksand', sans-serif;\\r\\n  font-size: 1em;\\r\\n}\\r\\n\\r\\n#loginLink{\\r\\n  font-family: 'Quicksand', sans-serif !important;\\r\\n  font-size: 1em !important;\\r\\n  margin: 10px 2%;\\r\\n  cursor: pointer;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"container\\\">\\n  <div id=\\\"title\\\">\\n    <h1><span>Request a Book</span></h1>\\n  </div>\\n  <div id=\\\"form\\\">\\n    <form (submit)=\\\"onRequestSubmit()\\\">\\n      <div class=\\\"left-section\\\">\\n        <mat-form-field appearance=\\\"outline\\\" class=\\\"full-width\\\">\\n          <mat-label>Book Name</mat-label>\\n          <input matInput autocomplete=\\\"off\\\" placeholder=\\\"Book Name\\\" [formControl]=\\\"bookNameFormControl\\\"\\n                 [errorStateMatcher]=\\\"matcher\\\">\\n          <mat-hint *ngIf=\\\"bookNameFormControl.value != ''\\\"></mat-hint>\\n          <mat-error *ngIf=\\\"bookNameFormControl.hasError('required')\\\">\\n            Book name is <strong>required</strong>\\n          </mat-error>\\n        </mat-form-field>\\n        <mat-form-field appearance=\\\"outline\\\" class=\\\"full-width\\\">\\n          <mat-label>Author</mat-label>\\n          <input matInput autocomplete=\\\"off\\\" placeholder=\\\"Author\\\" [formControl]=\\\"authorFormControl\\\"\\n                 [errorStateMatcher]=\\\"matcher\\\">\\n          <mat-hint *ngIf=\\\"authorFormControl.value != ''\\\"></mat-hint>\\n          <mat-error *ngIf=\\\"authorFormControl.hasError('required')\\\">\\n            Author name is <strong>required</strong>\\n          </mat-error>\\n        </mat-form-field>\\n        <mat-form-field appearance=\\\"outline\\\" class=\\\"full-width\\\">\\n          <mat-label>Publisher (Only if you know)</mat-label>\\n          <input matInput autocomplete=\\\"off\\\" placeholder=\\\"Publisher (Only if you know)\\\" [formControl]=\\\"publisherFormControl\\\">\\n        </mat-form-field>\\n      </div>\\n      <div class=\\\"right-section\\\">\\n        <mat-form-field appearance=\\\"outline\\\" class=\\\"full-width\\\">\\n          <mat-label>Edition (Only if you know)</mat-label>\\n          <input matInput autocomplete=\\\"off\\\" placeholder=\\\"Edition (Only if you know)\\\" [formControl]=\\\"editionFormControl\\\">\\n        </mat-form-field>\\n        <mat-form-field appearance=\\\"outline\\\" class=\\\"full-width\\\">\\n          <mat-label>Category (As you know)</mat-label>\\n          <input matInput placeholder=\\\"Category (As you know)\\\" [formControl]=\\\"categoryFormControl\\\">\\n        </mat-form-field>\\n        <mat-form-field appearance=\\\"outline\\\" class=\\\"full-width\\\">\\n          <mat-label>Any description (Optional)</mat-label>\\n          <input matInput placeholder=\\\"Any Description (Optional)\\\" [formControl]=\\\"descriptionFormControl\\\">\\n        </mat-form-field>\\n      </div>\\n      <button class=\\\"full-width\\\" id=\\\"submit-btn\\\" mat-raised-button color=\\\"primary\\\">Send Request</button>\\n    </form>\\n  </div>\\n\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {ErrorStateMatcher, MatSnackBar} from \"@angular/material\";\nimport {Router} from \"@angular/router\";\nimport {FormControl, FormGroupDirective, NgForm, Validators} from \"@angular/forms\";\nimport {BookDataService} from \"../../services/book-data.service\";\nimport {AuthService} from \"../../services/auth.service\";\n\nexport class MyErrorStateMatcher implements ErrorStateMatcher {\n  isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\n    const isSubmitted = form && form.submitted;\n    return !!(control && control.invalid && (control.dirty || control.touched || isSubmitted));\n  }\n}\n\n@Component({\n  selector: 'app-request-book',\n  templateUrl: './request-book.component.html',\n  styleUrls: ['./request-book.component.css']\n})\nexport class RequestBookComponent implements OnInit {\n\n  constructor(\n    private snackBar: MatSnackBar,\n    private bookDataService: BookDataService,\n    private authService: AuthService,\n    private router: Router\n  ) { }\n\n  ngOnInit() {\n  }\n\n  bookNameFormControl = new FormControl('', [\n    Validators.required,\n  ]);\n\n  authorFormControl = new FormControl('', [\n    Validators.required,\n  ]);\n\n  publisherFormControl = new FormControl('', []);\n\n  editionFormControl = new FormControl('', []);\n\n  categoryFormControl = new FormControl('', []);\n\n  descriptionFormControl = new FormControl('', []);\n\n  matcher = new MyErrorStateMatcher();\n\n  onRequestSubmit(){\n    if (this.bookNameFormControl.value == '' && this.authorFormControl.value == ''){\n      this.snackBar.open('Please fill up the required fields','Close', {\n        duration: 3000\n      });\n    }else {\n      this.authService.getProfile().subscribe(data => {\n        const book = {\n          name : this.bookNameFormControl.value,\n          author: this.authorFormControl.value,\n          publisher: this.publisherFormControl.value,\n          edition: this.editionFormControl.value,\n          category: this.categoryFormControl.value,\n          description: this.descriptionFormControl.value,\n          requestedDate: Date.now(),\n          requestedUser: data['user'].indexNumber\n        };\n\n        this.bookDataService.requestBook(book).subscribe(data => {\n          if (data['success']){\n            this.snackBar.open(\"Request Send Successfully\", \"Close\", {\n              duration: 3000\n            });\n            this.router.navigate(['/']);\n          }\n        });\n      });\n    }\n  }\n\n}\n","module.exports = \"<h1 mat-dialog-title>Did You Upload The Book?</h1>\\r\\n<div mat-dialog-content>\\r\\n  <p style=\\\"font-family: 'Quicksand', sans-serif; font-size: 1.1em\\\">Press OK to mark the book as uploaded</p>\\r\\n</div>\\r\\n<div mat-dialog-actions>\\r\\n  <button mat-button (click)=\\\"onNoClickRequested()\\\">No Thanks</button>\\r\\n  <button mat-button [mat-dialog-close]=\\\"1\\\" cdkFocusInitial>OK</button>\\r\\n</div>\\r\\n\"","module.exports = \".container{\\r\\n  margin-top: 100px;\\r\\n  width: 90%;\\r\\n  margin-left: calc((100vw - 90%)/2);\\r\\n  font-family: 'Raleway', sans-serif;\\r\\n}\\r\\n\\r\\n.content{\\r\\n  margin-top: 20px;\\r\\n}\\r\\n\\r\\ntable {\\r\\n  width: 100%;\\r\\n}\\r\\n\\r\\n.mat-form-field {\\r\\n  font-size: 14px;\\r\\n  width: 100%;\\r\\n}\\r\\n\\r\\n.loading-shade {\\r\\n  position: absolute;\\r\\n  top: 0;\\r\\n  left: 0;\\r\\n  bottom: 56px;\\r\\n  right: 0;\\r\\n  background: rgba(0, 0, 0, 0.15);\\r\\n  z-index: 1;\\r\\n  display: flex;\\r\\n  align-items: center;\\r\\n  justify-content: center;\\r\\n}\\r\\n\\r\\ntable {\\r\\n  overflow: auto;\\r\\n}\\r\\n\\r\\ntd, th {\\r\\n  overflow: hidden;\\r\\n  word-wrap: break-word;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"content\\\">\\n    <mat-toolbar>Reqested Books</mat-toolbar>\\n    <mat-form-field>\\n      <input matInput autocomplete=\\\"off\\\" (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Filter\\\">\\n    </mat-form-field>\\n    <div class=\\\"loading-shade\\\"\\n         *ngIf=\\\"isLoadingResults\\\">\\n      <mat-spinner *ngIf=\\\"isLoadingResults\\\"></mat-spinner>\\n    </div>\\n    <div class=\\\"mat-elevation-z8\\\">\\n      <table mat-table [dataSource]=\\\"dataSource\\\" matSort>\\n\\n        <ng-container matColumnDef=\\\"Book Name\\\" cdkColumnDef=\\\"bookName\\\">\\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> Book Name </th>\\n          <td mat-cell *matCellDef=\\\"let row\\\"> {{row.bookName}} </td>\\n        </ng-container>\\n\\n        <ng-container matColumnDef=\\\"Author\\\">\\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> Author </th>\\n          <td mat-cell *matCellDef=\\\"let row\\\"> {{row.author}} </td>\\n        </ng-container>\\n\\n        <ng-container matColumnDef=\\\"Student Index\\\">\\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> Student Index </th>\\n          <td mat-cell *matCellDef=\\\"let row\\\"> {{row.indexNumber}} </td>\\n        </ng-container>\\n\\n        <ng-container matColumnDef=\\\"Publisher\\\">\\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> Publisher </th>\\n          <td mat-cell *matCellDef=\\\"let row\\\"> {{row.publisher}} </td>\\n        </ng-container>\\n\\n        <ng-container matColumnDef=\\\"Edition\\\">\\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> Edition</th>\\n          <td mat-cell *matCellDef=\\\"let row\\\"> {{row.edition}} </td>\\n        </ng-container>\\n\\n        <ng-container matColumnDef=\\\"Category\\\">\\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> Category </th>\\n          <td mat-cell *matCellDef=\\\"let row\\\"> {{row.category}} </td>\\n        </ng-container>\\n\\n        <ng-container matColumnDef=\\\"Description\\\">\\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> Description </th>\\n          <td mat-cell *matCellDef=\\\"let row\\\"> {{row.description}} </td>\\n        </ng-container>\\n\\n        <ng-container matColumnDef=\\\"Requested By\\\">\\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> Requested By </th>\\n          <td mat-cell *matCellDef=\\\"let row\\\"> {{row.requestedBy}} </td>\\n        </ng-container>\\n\\n        <ng-container matColumnDef=\\\"Requested Date\\\">\\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> Requested Date </th>\\n          <td mat-cell *matCellDef=\\\"let row\\\"> {{row.requestedDate}} </td>\\n        </ng-container>\\n\\n        <ng-container matColumnDef=\\\"Update\\\">\\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> Update </th>\\n          <td mat-cell *matCellDef=\\\"let row\\\"> <button mat-raised-button color=\\\"primary\\\" (click)=\\\"updateRequestedBook(row.id, row.arrayIndex)\\\">Mark as Uploaded</button> </td>\\n        </ng-container>\\n\\n        <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n        <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\">\\n        </tr>\\n      </table>\\n\\n      <mat-paginator #paginator [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\" showFirstLastButtons></mat-paginator>\\n    </div>\\n  </div>\\n</div>\\n\\n\"","import {Component, Inject, OnInit, ViewChild} from '@angular/core';\nimport {\n  MAT_DIALOG_DATA, MatDialog, MatDialogRef, MatPaginator, MatSnackBar, MatSort,\n  MatTableDataSource\n} from \"@angular/material\";\nimport {AdminService} from \"../../services/admin.service\";\nimport {NavigationEnd, Router} from \"@angular/router\";\n\n@Component({\n  selector: 'app-requested-books',\n  templateUrl: './requested-books.component.html',\n  styleUrls: ['./requested-books.component.css']\n})\nexport class RequestedBooksComponent implements OnInit {\n\n  displayedColumns = ['Book Name', 'Author', 'Publisher', 'Edition', 'Category', 'Description', 'Requested By', 'Requested Date', 'Update'];\n  dataSource: MatTableDataSource<RequestedBookData>;\n\n  @ViewChild('paginator') paginator:MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n\n  user: Object;\n  requestedBooks: RequestedBookData[] = [];\n\n  isLoadingResults = true;\n  isLoadingResultsBookRead = true;\n\n  constructor(\n    private adminService: AdminService,\n    private dialog: MatDialog,\n    private snackBar: MatSnackBar,\n    private router: Router\n  ) {\n    this.router.routeReuseStrategy.shouldReuseRoute = function() {\n      return false;\n    };\n    this.router.events.subscribe((evt) => {\n      if (evt instanceof NavigationEnd) {\n        // trick the Router into believing it's last link wasn't previously loaded\n        this.router.navigated = false;\n      }\n    });\n  }\n\n  ngOnInit() {\n    this.adminService.getAllRequestedBooks().subscribe(books => {\n      let arrayIndex = 0;\n      books['books'].forEach(item => {\n\n        let newBook :RequestedBookData = {\n          id : item['_id'],\n          bookName: item['name'],\n          author: item['author'],\n          publisher: item['publisher'],\n          edition: item['edition'],\n          category: item['category'],\n          description: item['description'],\n          requestedBy: item['requestedUser'],\n          requestedDate: new Date(item['requestedDate']).toLocaleString(),\n          arrayIndex: arrayIndex\n        };\n        arrayIndex++;\n        this.requestedBooks.push(newBook);\n\n        this.dataSource = new MatTableDataSource(this.requestedBooks);\n        this.dataSource.paginator = this.paginator;\n        this.dataSource.sort = this.sort;\n      });\n    });\n    this.isLoadingResults = false;\n    this.isLoadingResultsBookRead = false;\n  }\n\n  applyFilter(filterValue: string) {\n    filterValue = filterValue.trim(); // Remove whitespace\n    filterValue = filterValue.toLowerCase(); // Datasource defaults to lowercase matches\n    this.dataSource.filter = filterValue;\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n\n  updateRequestedBook(id, arrayIndex){\n    let dialogRef = this.dialog.open(DialogOverviewDialogRequestedBook, {\n      width: '400px',\n      data: { id: id}\n    });\n    dialogRef.afterClosed().subscribe(result => {\n      if (result == 1){\n        let bookData = {\n          id : id\n        };\n\n        this.adminService.updateBookStatus(bookData).subscribe(result => {\n          if (result['success']){\n            this.snackBar.open(\"Status Updated Successfully\", 'Close', {\n              duration: 2000\n            });\n            this.dataSource.data.splice(arrayIndex,1);\n            this.dataSource = new MatTableDataSource<RequestedBookData>(this.dataSource.data);\n            this.router.navigate(['/requestedBooks']);\n\n          }else{\n            this.snackBar.open(\"Updating Failed\", 'Close', {\n              duration: 2000\n            });\n          }\n        });\n      }\n    });\n  }\n\n}\n\nexport interface RequestedBookData{\n  id: string,\n  bookName: string,\n  author: string,\n  publisher: string,\n  edition: string,\n  category: string,\n  description: string,\n  requestedBy: string,\n  requestedDate: string,\n  arrayIndex: number\n}\n\n@Component({\n  selector: 'dialog-overview-dialog-requested-book',\n  templateUrl: 'dialog-overview-dialog-requested-book.html',\n})\nexport class DialogOverviewDialogRequestedBook {\n\n  constructor(\n    public dialogRef: MatDialogRef<DialogOverviewDialogRequestedBook>,\n    @Inject(MAT_DIALOG_DATA) public data: any) {\n  }\n\n  onNoClickRequested(): void {\n    this.dialogRef.close();\n  }\n\n}\n","module.exports = \".container{\\r\\n  width: 70%;\\r\\n  margin-left: calc((100vw - 70%)/2);\\r\\n  margin-top: 100px;\\r\\n  display: flex;\\r\\n  flex-direction: column;\\r\\n  align-items: center;\\r\\n}\\r\\n\\r\\n#title{\\r\\n  display: flex;\\r\\n  align-items: center;\\r\\n  justify-content: center;\\r\\n  font-family: 'Bitter', sans-serif;\\r\\n}\\r\\n\\r\\n#form {\\r\\n  width: 70%;\\r\\n  min-width: 250px;\\r\\n  display: flex;\\r\\n  flex-direction: column;\\r\\n  align-items: center;\\r\\n}\\r\\n\\r\\nform{\\r\\n  width: 100%;\\r\\n  margin-top: 10px;\\r\\n}\\r\\n\\r\\n.full-width {\\r\\n  width: 100%;\\r\\n  margin-top: 10px;\\r\\n}\\r\\n\\r\\n.left-section, .right-section{\\r\\n  width: 46%;\\r\\n  float: left;\\r\\n  padding: 2%;\\r\\n}\\r\\n\\r\\n#register-btn{\\r\\n  margin: 0 2%;\\r\\n  width: 96%;\\r\\n  height: 50px;\\r\\n  font-family: 'Quicksand', sans-serif;\\r\\n  font-size: 1em;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"container\\\">\\n  <div id=\\\"title\\\">\\n    <h1><span>Update Book</span></h1>\\n  </div>\\n  <div id=\\\"form\\\">\\n    <form (submit)=\\\"onUpdateBookSubmit()\\\">\\n      <div class=\\\"left-section\\\">\\n        <mat-form-field appearance=\\\"outline\\\" class=\\\"full-width\\\">\\n          <mat-label>Book Name</mat-label>\\n          <input matInput autocomplete=\\\"off\\\" placeholder=\\\"Book Name\\\" [formControl]=\\\"bookNameFormControl\\\"\\n                 [errorStateMatcher]=\\\"matcher\\\">\\n          <mat-error *ngIf=\\\"bookNameFormControl.hasError('required')\\\">\\n            First name is <strong>required</strong>\\n          </mat-error>\\n        </mat-form-field>\\n        <mat-form-field appearance=\\\"outline\\\" class=\\\"full-width\\\">\\n          <mat-label>Author</mat-label>\\n          <input matInput autocomplete=\\\"off\\\" placeholder=\\\"Author\\\" [formControl]=\\\"authorFormControl\\\"\\n                 [errorStateMatcher]=\\\"matcher\\\">\\n          <mat-error *ngIf=\\\"authorFormControl.hasError('required')\\\">\\n            Author name is <strong>required</strong>\\n          </mat-error>\\n        </mat-form-field>\\n        <mat-form-field appearance=\\\"outline\\\" class=\\\"full-width\\\">\\n          <mat-label>Pages</mat-label>\\n          <input matInput autocomplete=\\\"off\\\" placeholder=\\\"Index Number\\\" [formControl]=\\\"pagesFormControl\\\"\\n                 [errorStateMatcher]=\\\"matcher\\\">\\n          <mat-error *ngIf=\\\"pagesFormControl.hasError('pattern')\\\">\\n            <strong>Only numbers</strong> are allowed\\n          </mat-error>\\n          <mat-error *ngIf=\\\"pagesFormControl.hasError('required')\\\">\\n            Number of pages is <strong>required</strong>\\n          </mat-error>\\n        </mat-form-field>\\n        <mat-form-field appearance=\\\"outline\\\" class=\\\"full-width\\\">\\n          <mat-label>Edition</mat-label>\\n          <input matInput autocomplete=\\\"off\\\" placeholder=\\\"Edition\\\" [formControl]=\\\"editionFormControl\\\"\\n                 [errorStateMatcher]=\\\"matcher\\\">\\n          <mat-error *ngIf=\\\"editionFormControl.hasError('required')\\\">\\n            Edition is <strong>required</strong>\\n          </mat-error>\\n          <mat-error *ngIf=\\\"editionFormControl.hasError('pattern')\\\">\\n            <strong>Only numbers</strong> are allowed\\n          </mat-error>\\n        </mat-form-field>\\n      </div>\\n      <div class=\\\"right-section\\\">\\n        <mat-form-field appearance=\\\"outline\\\" class=\\\"full-width\\\">\\n          <mat-label>Publisher</mat-label>\\n          <input matInput autocomplete=\\\"off\\\" placeholder=\\\"Publisher\\\" [formControl]=\\\"publisherFormControl\\\"\\n                 [errorStateMatcher]=\\\"matcher\\\">\\n          <mat-error *ngIf=\\\"publisherFormControl.hasError('required')\\\">\\n            Publisher is <strong>required</strong>\\n          </mat-error>\\n        </mat-form-field>\\n        <mat-form-field appearance=\\\"outline\\\" class=\\\"full-width\\\">\\n          <mat-label>Published Year</mat-label>\\n          <input matInput autocomplete=\\\"off\\\" maxlength=\\\"4\\\" placeholder=\\\"Published Year\\\" [formControl]=\\\"yearFormControl\\\"\\n                 [errorStateMatcher]=\\\"matcher\\\">\\n          <mat-error *ngIf=\\\"yearFormControl.hasError('required')\\\">\\n            Published year is <strong>required</strong>\\n          </mat-error>\\n          <mat-error *ngIf=\\\"yearFormControl.hasError('minlength') || yearFormControl.hasError('pattern')\\\">\\n            Invalid Year Format\\n          </mat-error>\\n        </mat-form-field>\\n        <mat-form-field appearance=\\\"outline\\\" class=\\\"full-width\\\">\\n          <mat-label>Image Url</mat-label>\\n          <input matInput autocomplete=\\\"off\\\" placeholder=\\\"Image Url\\\" [formControl]=\\\"imageUrlFormControl\\\"\\n                 [errorStateMatcher]=\\\"matcher\\\">\\n          <mat-error *ngIf=\\\"imageUrlFormControl.hasError('required')\\\">\\n            Image Url is <strong>required</strong>\\n          </mat-error>\\n        </mat-form-field>\\n        <mat-form-field appearance=\\\"outline\\\" class=\\\"full-width\\\">\\n          <mat-label>Number of Copies</mat-label>\\n          <input autocomplete=\\\"off\\\" matInput placeholder=\\\"Number of Copies\\\" [formControl]=\\\"copiesFormControl\\\"\\n                 [errorStateMatcher]=\\\"matcher\\\">\\n          <mat-error *ngIf=\\\"copiesFormControl.hasError('required')\\\">\\n            Number of copies is <strong>required</strong>\\n          </mat-error>\\n          <mat-error *ngIf=\\\"copiesFormControl.hasError('pattern')\\\">\\n            <strong>Only numbers</strong> are allowed\\n          </mat-error>\\n        </mat-form-field>\\n      </div>\\n      <button class=\\\"full-width\\\" id=\\\"register-btn\\\" mat-raised-button color=\\\"primary\\\">Update The Book</button>\\n    </form>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {ErrorStateMatcher, MatSnackBar} from \"@angular/material\";\nimport {FormControl, FormGroupDirective, NgForm, Validators} from \"@angular/forms\";\nimport {ActivatedRoute, Router} from \"@angular/router\";\nimport {BookDataService} from \"../../services/book-data.service\";\n\nexport class MyErrorStateMatcher implements ErrorStateMatcher {\n  isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\n    const isSubmitted = form && form.submitted;\n    return !!(control && control.invalid && (control.dirty || control.touched || isSubmitted));\n  }\n}\n\n@Component({\n  selector: 'app-update-book',\n  templateUrl: './update-book.component.html',\n  styleUrls: ['./update-book.component.css']\n})\nexport class UpdateBookComponent implements OnInit {\n\n  id$: Object;\n\n  constructor(\n    private snackBar: MatSnackBar,\n    private router: Router,\n    private bookDataService: BookDataService,\n    private route: ActivatedRoute,\n  ) {\n    this.route.params.subscribe(params => this.id$ = params.id);\n  }\n\n  ngOnInit() {\n    this.bookDataService.getBookById(this.id$).subscribe(\n      book => {\n        this.bookNameFormControl.setValue(book['book'].name);\n        this.authorFormControl.setValue(book['book'].author);\n        this.pagesFormControl.setValue(book['book'].pages);\n        this.editionFormControl.setValue(book['book'].edition);\n        this.publisherFormControl.setValue(book['book'].publisher);\n        this.yearFormControl.setValue(book['book'].year);\n        this.imageUrlFormControl.setValue(book['book'].imageUrl);\n        this.copiesFormControl.setValue(book['book'].copies);\n      }\n    );\n  }\n\n  bookNameFormControl = new FormControl('', [\n    Validators.required,\n  ]);\n\n  authorFormControl = new FormControl('', [\n    Validators.required,\n  ]);\n\n  pagesFormControl = new FormControl('', [\n    Validators.required,\n    Validators.pattern(/^-?(0|[1-9]\\d*)?$/),\n  ]);\n\n  editionFormControl = new FormControl('', [\n    Validators.required,\n    Validators.pattern(/^-?(0|[1-9]\\d*)?$/),\n  ]);\n\n  publisherFormControl = new FormControl('', [\n    Validators.required,\n  ]);\n\n  yearFormControl = new FormControl('', [\n    Validators.required,\n    Validators.pattern(/^-?(0|[1-9]\\d*)?$/),\n    Validators.minLength(4),\n  ]);\n\n  imageUrlFormControl = new FormControl('', [\n    Validators.required,\n  ]);\n\n  copiesFormControl = new FormControl('', [\n    Validators.required,\n    Validators.pattern(/^-?(0|[1-9]\\d*)?$/),\n  ]);\n\n  matcher = new MyErrorStateMatcher();\n\n  onUpdateBookSubmit(){\n    if (\n      !this.bookNameFormControl.invalid &&\n      !this.authorFormControl.invalid &&\n      !this.pagesFormControl.invalid &&\n      !this.editionFormControl.invalid &&\n      !this.publisherFormControl.invalid &&\n      !this.yearFormControl.invalid &&\n      !this.imageUrlFormControl.invalid &&\n      !this.copiesFormControl.invalid\n    ){\n      const newBook = {\n        bookId: this.id$,\n        bookName : this.bookNameFormControl.value,\n        author : this.authorFormControl.value,\n        pages : this.pagesFormControl.value,\n        edition : this.editionFormControl.value,\n        publisher : this.publisherFormControl.value,\n        year : this.yearFormControl.value,\n        imageUrl : this.imageUrlFormControl.value,\n        copies : this.copiesFormControl.value,\n        from: Date.now()\n      };\n\n      this.bookDataService.updateBook(newBook).subscribe(status => {\n        if (status['success'] == true){\n          this.snackBar.open('Book Update Successfully','Close',{\n            duration: 3000\n          });\n          this.router.navigate(['/addBook']);\n        }else{\n          this.snackBar.open('Failed to Update','Close',{\n            duration: 3000\n          });\n        }\n      });\n\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {CanActivate, Router} from '@angular/router';\nimport {AuthService} from \"../services/auth.service\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AdminGuard implements CanActivate {\n\n  constructor(\n    private authService: AuthService,\n    private router: Router\n  ){}\n\n  canActivate(){\n    if (this.authService.adminLoggedIn()){\n      return true;\n    }else{\n      this.router.navigate(['/login']);\n      return false;\n    }\n\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { Router, CanActivate } from \"@angular/router\";\nimport { AuthService } from \"../services/auth.service\";\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n\n  constructor(\n    private authService: AuthService,\n    private router: Router\n  ){\n\n  }\n\n  canActivate(){\n    if (this.authService.memberLoggedIn()){\n      return true;\n    }else{\n      this.router.navigate(['/login']);\n      return false;\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router} from '@angular/router';\nimport { Observable } from 'rxjs';\nimport {AuthService} from \"../services/auth.service\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DefaultGuard implements CanActivate {\n  constructor(\n    private authService: AuthService,\n    private router: Router\n  ){}\n\n  canActivate(){\n    if (!this.authService.loggedIn()){\n      return true;\n    }else if (this.authService.adminLoggedIn()){\n      this.router.navigate(['/adminHome']);\n      return false;\n    }else if (this.authService.memberLoggedIn()){\n      this.router.navigate(['/']);\n      return false;\n    }\n\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router} from '@angular/router';\nimport { Observable } from 'rxjs';\nimport {AuthService} from \"../services/auth.service\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProfileGuard implements CanActivate {\n  constructor(\n    private authService: AuthService,\n    private router: Router\n  ){}\n\n  canActivate(){\n    if (this.authService.loggedIn()){\n      return true;\n    }else{\n      this.router.navigate(['/login']);\n      return false;\n    }\n\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpClientModule , HttpHeaders } from \"@angular/common/http\";\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AdminService {\n\n  constructor( private http: HttpClient) { }\n\n  getAllUsers(){\n    let headers = new HttpHeaders();\n    headers.append('Content-Type', 'application/json');\n    return this.http.post('http://localhost:3000/users/getAllUsers', {headers: headers})\n      .pipe(map(res => res));\n  }\n\n  getAllRequestedBooks(){\n    let headers = new HttpHeaders();\n    headers.append('Content-Type', 'application/json');\n    return this.http.post('http://localhost:3000/books/getAllRequestedBooks', {headers: headers})\n      .pipe(map(res => res));\n  }\n\n  updateBookStatus(book){\n    let headers = new HttpHeaders();\n    headers.append('Content-Type', 'application/json');\n    return this.http.post('http://localhost:3000/books/updateBookStatus', book,{headers: headers})\n      .pipe(map(res => res));\n  }\n\n  addFine(fine){\n    let headers = new HttpHeaders();\n    headers.append('Content-Type', 'application/json');\n    return this.http.post('http://localhost:3000/books/addFine', fine,{headers: headers})\n      .pipe(map(res => res));\n  }\n\n  getFines(filter, today){\n    let dates  = {\n      filter: filter,\n      today: today\n    };\n    let headers = new HttpHeaders();\n    headers.append('Content-Type', 'application/json');\n    return this.http.post('http://localhost:3000/books/getFines', dates,{headers: headers})\n      .pipe(map(res => res));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpClientModule , HttpHeaders } from \"@angular/common/http\";\nimport { map } from 'rxjs/operators';\nimport { JwtHelperService } from '@auth0/angular-jwt';\n\nconst helper = new JwtHelperService();\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  authToken: any;\n  user : any;\n\n  constructor(\n    private http: HttpClient\n  ) { }\n\n  registerUser(user){\n    let headers = new HttpHeaders();\n    headers.append('Content-Type', 'application/json');\n    return this.http.post('http://localhost:3000/users/register', user, {headers: headers})\n      .pipe(map(res => res));\n  }\n\n  authenticateUser(user){\n    let headers = new HttpHeaders();\n    headers.append('Content-Type', 'application/json');\n    return this.http.post('http://localhost:3000/users/authenticate', user, {headers: headers})\n      .pipe(map(res => res));\n  }\n\n  checkUserAvailability(user){\n    let headers = new HttpHeaders();\n    headers.append('Content-Type', 'application/json');\n    return this.http.post('http://localhost:3000/users/checkAvailability', user, {headers: headers})\n      .pipe(map(res => res));\n\n  }\n\n  checkAdminAvailability(user){\n    let headers = new HttpHeaders();\n    headers.append('Content-Type', 'application/json');\n    return this.http.post('http://localhost:3000/users/checkAdminAvailability', user, {headers: headers})\n      .pipe(map(res => res));\n\n  }\n\n  burrowBook(detail){\n    let headers = new HttpHeaders();\n    headers.append('Content-Type', 'application/json');\n    return this.http.post('http://localhost:3000/users/burrowBook',detail,{headers: headers})\n      .pipe(map(res => res));\n  }\n\n  returnBook(detail){\n    let headers = new HttpHeaders();\n    headers.append('Content-Type', 'application/json');\n    return this.http.post('http://localhost:3000/users/returnBook',detail,{headers: headers})\n      .pipe(map(res => res));\n  }\n\n  bookCountDown(bookDetails){\n    let headers = new HttpHeaders();\n    headers.append('Content-Type', 'application/json');\n    return this.http.post('http://localhost:3000/books/countDown',bookDetails,{headers: headers})\n      .pipe(map(res => res));\n  }\n\n  bookCountUp(bookDetails){\n    let headers = new HttpHeaders();\n    headers.append('Content-Type', 'application/json');\n    return this.http.post('http://localhost:3000/books/countUp',bookDetails,{headers: headers})\n      .pipe(map(res => res));\n  }\n\n  getReservedBooks(email){\n    let user = { email : email};\n    let headers = new HttpHeaders();\n    headers.append('Content-Type', 'application/json');\n    return this.http.post('http://localhost:3000/users/getReserved',user,{headers: headers})\n      .pipe(map(res => res));\n  }\n\n  getReadBooks(email){\n    let user = { email : email};\n    let headers = new HttpHeaders();\n    headers.append('Content-Type', 'application/json');\n    return this.http.post('http://localhost:3000/users/getRead',user,{headers: headers})\n      .pipe(map(res => res));\n  }\n\n  getProfile(){\n    this.loadToken();\n    let headers = new HttpHeaders({\n      'Authorization' : this.authToken,\n      'Content-Type' : 'application/json'\n    });\n    return this.http.get('http://localhost:3000/users/profile', {headers: headers})\n      .pipe(map(res => res));\n  }\n\n  loadToken(){\n    const token = localStorage.getItem('id_token');\n    this.authToken = token;\n  }\n\n  loggedIn(){\n    const isExpired = helper.isTokenExpired(localStorage.getItem('id_token'));\n    return !isExpired;\n  }\n\n  memberLoggedIn(){\n    const isMember = localStorage.getItem('user') != undefined && localStorage.getItem('user').split('\"type\":\"')[1].split('\"}')[0] == 'member';\n    return (this.loggedIn() && isMember);\n  }\n\n  adminLoggedIn(){\n    const isMember = localStorage.getItem('user') != undefined && localStorage.getItem('user').split('\"type\":\"')[1].split('\"}')[0] == 'admin';\n    return (this.loggedIn() && isMember);\n  }\n\n  storeUserData(token, user){\n    localStorage.setItem('id_token', token);\n    localStorage.setItem('user', JSON.stringify(user));\n    this.authToken = token;\n    this.user = user;\n  }\n\n  logout(){\n    this.authToken = null;\n    this.user = null;\n    localStorage.clear();\n  }\n\n  updateUser(user){\n    let headers = new HttpHeaders();\n    headers.append('Content-Type', 'application/json');\n    return this.http.post('http://localhost:3000/users/updateUser', user, {headers: headers})\n      .pipe(map(res => res));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {HttpClient, HttpClientModule, HttpHeaders} from \"@angular/common/http\";\nimport {map} from \"rxjs/internal/operators\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BookDataService {\n\n  constructor(private http: HttpClient) { }\n\n  getBooks(bookName){\n    return this.http.get('http://localhost:3000/books/' + bookName);\n  }\n\n  getBookById(id){\n    return this.http.get('http://localhost:3000/books/book-details/' + id);\n  }\n\n  getNewBooks(limit){\n    let headers = new HttpHeaders();\n    headers.append('Content-Type', 'application/json');\n    return this.http.post('http://localhost:3000/books/getNewBooks', limit, {headers: headers})\n      .pipe(map(res => res));\n  }\n\n  requestBook(book){\n    let headers = new HttpHeaders();\n    headers.append('Content-Type', 'application/json');\n    return this.http.post('http://localhost:3000/books/requestBook', book, {headers: headers})\n      .pipe(map(res => res));\n  }\n\n  checkBookAvailability(book){\n    let headers = new HttpHeaders();\n    headers.append('Content-Type', 'application/json');\n    return this.http.post('http://localhost:3000/books/checkAvailability', book, {headers: headers})\n      .pipe(map(res => res));\n  }\n\n  addBook(book){\n    let headers = new HttpHeaders();\n    headers.append('Content-Type', 'application/json');\n    return this.http.post('http://localhost:3000/books/addBook', book, {headers: headers})\n      .pipe(map(res => res));\n  }\n\n  getAllBooks(){\n    let headers = new HttpHeaders();\n    headers.append('Content-Type', 'application/json');\n    return this.http.post('http://localhost:3000/books/getAllBooks', {headers: headers})\n      .pipe(map(res => res));\n  }\n\n  updateBook(book){\n    let headers = new HttpHeaders();\n    headers.append('Content-Type', 'application/json');\n    return this.http.post('http://localhost:3000/books/updateBook', book, {headers: headers})\n      .pipe(map(res => res));\n  }\n\n  deleteBook(book){\n    let headers = new HttpHeaders();\n    headers.append('Content-Type', 'application/json');\n    return this.http.post('http://localhost:3000/books/deleteBook', book, {headers: headers})\n      .pipe(map(res => res));\n  }\n\n  getBooksFilter(filter, today){\n    let dates  = {\n      filter: filter,\n      today: today\n    };\n    let headers = new HttpHeaders();\n    headers.append('Content-Type', 'application/json');\n    return this.http.post('http://localhost:3000/books/getBooksFilter', dates,{headers: headers})\n      .pipe(map(res => res));\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}